
EE120BPersonalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000003cc  00800100  00001608  0000169c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001608  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009f  008004cc  008004cc  00001a68  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a68  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00001ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f07  00000000  00000000  00001bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000380  00000000  00000000  00002af3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bd8  00000000  00000000  00002e73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002ac  00000000  00000000  00003a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000063b  00000000  00000000  00003cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007cc  00000000  00000000  00004333  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000118  00000000  00000000  00004aff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	60 c0       	rjmp	.+192    	; 0xc2 <__ctors_end>
       2:	00 00       	nop
       4:	7c c0       	rjmp	.+248    	; 0xfe <__bad_interrupt>
       6:	00 00       	nop
       8:	7a c0       	rjmp	.+244    	; 0xfe <__bad_interrupt>
       a:	00 00       	nop
       c:	78 c0       	rjmp	.+240    	; 0xfe <__bad_interrupt>
       e:	00 00       	nop
      10:	76 c0       	rjmp	.+236    	; 0xfe <__bad_interrupt>
      12:	00 00       	nop
      14:	74 c0       	rjmp	.+232    	; 0xfe <__bad_interrupt>
      16:	00 00       	nop
      18:	72 c0       	rjmp	.+228    	; 0xfe <__bad_interrupt>
      1a:	00 00       	nop
      1c:	70 c0       	rjmp	.+224    	; 0xfe <__bad_interrupt>
      1e:	00 00       	nop
      20:	6e c0       	rjmp	.+220    	; 0xfe <__bad_interrupt>
      22:	00 00       	nop
      24:	6c c0       	rjmp	.+216    	; 0xfe <__bad_interrupt>
      26:	00 00       	nop
      28:	6a c0       	rjmp	.+212    	; 0xfe <__bad_interrupt>
      2a:	00 00       	nop
      2c:	68 c0       	rjmp	.+208    	; 0xfe <__bad_interrupt>
      2e:	00 00       	nop
      30:	66 c0       	rjmp	.+204    	; 0xfe <__bad_interrupt>
      32:	00 00       	nop
      34:	89 c0       	rjmp	.+274    	; 0x148 <__vector_13>
      36:	00 00       	nop
      38:	62 c0       	rjmp	.+196    	; 0xfe <__bad_interrupt>
      3a:	00 00       	nop
      3c:	60 c0       	rjmp	.+192    	; 0xfe <__bad_interrupt>
      3e:	00 00       	nop
      40:	5e c0       	rjmp	.+188    	; 0xfe <__bad_interrupt>
      42:	00 00       	nop
      44:	5c c0       	rjmp	.+184    	; 0xfe <__bad_interrupt>
      46:	00 00       	nop
      48:	5a c0       	rjmp	.+180    	; 0xfe <__bad_interrupt>
      4a:	00 00       	nop
      4c:	58 c0       	rjmp	.+176    	; 0xfe <__bad_interrupt>
      4e:	00 00       	nop
      50:	56 c0       	rjmp	.+172    	; 0xfe <__bad_interrupt>
      52:	00 00       	nop
      54:	54 c0       	rjmp	.+168    	; 0xfe <__bad_interrupt>
      56:	00 00       	nop
      58:	52 c0       	rjmp	.+164    	; 0xfe <__bad_interrupt>
      5a:	00 00       	nop
      5c:	50 c0       	rjmp	.+160    	; 0xfe <__bad_interrupt>
      5e:	00 00       	nop
      60:	4e c0       	rjmp	.+156    	; 0xfe <__bad_interrupt>
      62:	00 00       	nop
      64:	4c c0       	rjmp	.+152    	; 0xfe <__bad_interrupt>
      66:	00 00       	nop
      68:	4a c0       	rjmp	.+148    	; 0xfe <__bad_interrupt>
      6a:	00 00       	nop
      6c:	48 c0       	rjmp	.+144    	; 0xfe <__bad_interrupt>
      6e:	00 00       	nop
      70:	46 c0       	rjmp	.+140    	; 0xfe <__bad_interrupt>
      72:	00 00       	nop
      74:	44 c0       	rjmp	.+136    	; 0xfe <__bad_interrupt>
      76:	00 00       	nop
      78:	42 c0       	rjmp	.+132    	; 0xfe <__bad_interrupt>
      7a:	00 00       	nop
      7c:	40 c0       	rjmp	.+128    	; 0xfe <__bad_interrupt>
      7e:	00 00       	nop
      80:	3e c0       	rjmp	.+124    	; 0xfe <__bad_interrupt>
      82:	00 00       	nop
      84:	3c c0       	rjmp	.+120    	; 0xfe <__bad_interrupt>
      86:	00 00       	nop
      88:	3a c0       	rjmp	.+116    	; 0xfe <__bad_interrupt>
      8a:	00 00       	nop
      8c:	eb 04       	cpc	r14, r11
      8e:	ef 04       	cpc	r14, r15
      90:	f7 04       	cpc	r15, r7
      92:	0c 05       	cpc	r16, r12
      94:	10 05       	cpc	r17, r0
      96:	18 05       	cpc	r17, r8
      98:	1c 05       	cpc	r17, r12
      9a:	25 05       	cpc	r18, r5
      9c:	29 05       	cpc	r18, r9
      9e:	2d 05       	cpc	r18, r13
      a0:	35 05       	cpc	r19, r5
      a2:	7a 05       	cpc	r23, r10
      a4:	7e 05       	cpc	r23, r14
      a6:	84 05       	cpc	r24, r4
      a8:	8a 05       	cpc	r24, r10
      aa:	92 05       	cpc	r25, r2
      ac:	9a 05       	cpc	r25, r10
      ae:	a7 05       	cpc	r26, r7
      b0:	ab 05       	cpc	r26, r11
      b2:	b3 05       	cpc	r27, r3
      b4:	b7 05       	cpc	r27, r7
      b6:	bf 05       	cpc	r27, r15
      b8:	c3 05       	cpc	r28, r3
      ba:	c9 05       	cpc	r28, r9
      bc:	d2 05       	cpc	r29, r2
      be:	d6 05       	cpc	r29, r6
      c0:	df 05       	cpc	r29, r15

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf ef       	ldi	r28, 0xFF	; 255
      c8:	d0 e4       	ldi	r29, 0x40	; 64
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	14 e0       	ldi	r17, 0x04	; 4
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	e8 e0       	ldi	r30, 0x08	; 8
      d6:	f6 e1       	ldi	r31, 0x16	; 22
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0b bf       	out	0x3b, r16	; 59
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <__do_copy_data+0x14>
      de:	07 90       	elpm	r0, Z+
      e0:	0d 92       	st	X+, r0
      e2:	ac 3c       	cpi	r26, 0xCC	; 204
      e4:	b1 07       	cpc	r27, r17
      e6:	d9 f7       	brne	.-10     	; 0xde <__do_copy_data+0x10>

000000e8 <__do_clear_bss>:
      e8:	25 e0       	ldi	r18, 0x05	; 5
      ea:	ac ec       	ldi	r26, 0xCC	; 204
      ec:	b4 e0       	ldi	r27, 0x04	; 4
      ee:	01 c0       	rjmp	.+2      	; 0xf2 <.do_clear_bss_start>

000000f0 <.do_clear_bss_loop>:
      f0:	1d 92       	st	X+, r1

000000f2 <.do_clear_bss_start>:
      f2:	ab 36       	cpi	r26, 0x6B	; 107
      f4:	b2 07       	cpc	r27, r18
      f6:	e1 f7       	brne	.-8      	; 0xf0 <.do_clear_bss_loop>
      f8:	d7 d5       	rcall	.+2990   	; 0xca8 <main>
      fa:	0c 94 02 0b 	jmp	0x1604	; 0x1604 <_exit>

000000fe <__bad_interrupt>:
      fe:	80 cf       	rjmp	.-256    	; 0x0 <__vectors>

00000100 <TimerOn>:
	}
}

void frequency(double f)
{
	frequency_g = f;
     100:	8b e0       	ldi	r24, 0x0B	; 11
     102:	80 93 81 00 	sts	0x0081, r24
     106:	8d e7       	ldi	r24, 0x7D	; 125
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	90 93 89 00 	sts	0x0089, r25
     10e:	80 93 88 00 	sts	0x0088, r24
     112:	82 e0       	ldi	r24, 0x02	; 2
     114:	80 93 6f 00 	sts	0x006F, r24
     118:	10 92 85 00 	sts	0x0085, r1
     11c:	10 92 84 00 	sts	0x0084, r1
     120:	80 91 4c 04 	lds	r24, 0x044C
     124:	90 91 4d 04 	lds	r25, 0x044D
     128:	a0 91 4e 04 	lds	r26, 0x044E
     12c:	b0 91 4f 04 	lds	r27, 0x044F
     130:	80 93 5f 05 	sts	0x055F, r24
     134:	90 93 60 05 	sts	0x0560, r25
     138:	a0 93 61 05 	sts	0x0561, r26
     13c:	b0 93 62 05 	sts	0x0562, r27
     140:	8f b7       	in	r24, 0x3f	; 63
     142:	80 68       	ori	r24, 0x80	; 128
     144:	8f bf       	out	0x3f, r24	; 63
     146:	08 95       	ret

00000148 <__vector_13>:
     148:	1f 92       	push	r1
     14a:	0f 92       	push	r0
     14c:	0f b6       	in	r0, 0x3f	; 63
     14e:	0f 92       	push	r0
     150:	11 24       	eor	r1, r1
     152:	8f 93       	push	r24
     154:	9f 93       	push	r25
     156:	af 93       	push	r26
     158:	bf 93       	push	r27
     15a:	80 91 5f 05 	lds	r24, 0x055F
     15e:	90 91 60 05 	lds	r25, 0x0560
     162:	a0 91 61 05 	lds	r26, 0x0561
     166:	b0 91 62 05 	lds	r27, 0x0562
     16a:	01 97       	sbiw	r24, 0x01	; 1
     16c:	a1 09       	sbc	r26, r1
     16e:	b1 09       	sbc	r27, r1
     170:	80 93 5f 05 	sts	0x055F, r24
     174:	90 93 60 05 	sts	0x0560, r25
     178:	a0 93 61 05 	sts	0x0561, r26
     17c:	b0 93 62 05 	sts	0x0562, r27
     180:	89 2b       	or	r24, r25
     182:	8a 2b       	or	r24, r26
     184:	8b 2b       	or	r24, r27
     186:	99 f4       	brne	.+38     	; 0x1ae <__vector_13+0x66>
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	80 93 63 05 	sts	0x0563, r24
     18e:	80 91 4c 04 	lds	r24, 0x044C
     192:	90 91 4d 04 	lds	r25, 0x044D
     196:	a0 91 4e 04 	lds	r26, 0x044E
     19a:	b0 91 4f 04 	lds	r27, 0x044F
     19e:	80 93 5f 05 	sts	0x055F, r24
     1a2:	90 93 60 05 	sts	0x0560, r25
     1a6:	a0 93 61 05 	sts	0x0561, r26
     1aa:	b0 93 62 05 	sts	0x0562, r27
     1ae:	bf 91       	pop	r27
     1b0:	af 91       	pop	r26
     1b2:	9f 91       	pop	r25
     1b4:	8f 91       	pop	r24
     1b6:	0f 90       	pop	r0
     1b8:	0f be       	out	0x3f, r0	; 63
     1ba:	0f 90       	pop	r0
     1bc:	1f 90       	pop	r1
     1be:	18 95       	reti

000001c0 <delay_ms>:
     1c0:	18 16       	cp	r1, r24
     1c2:	19 06       	cpc	r1, r25
     1c4:	9c f4       	brge	.+38     	; 0x1ec <delay_ms+0x2c>
     1c6:	40 e0       	ldi	r20, 0x00	; 0
     1c8:	50 e0       	ldi	r21, 0x00	; 0
     1ca:	77 e0       	ldi	r23, 0x07	; 7
     1cc:	63 e0       	ldi	r22, 0x03	; 3
     1ce:	0b c0       	rjmp	.+22     	; 0x1e6 <delay_ms+0x26>
     1d0:	00 00       	nop
     1d2:	21 50       	subi	r18, 0x01	; 1
     1d4:	31 09       	sbc	r19, r1
     1d6:	21 15       	cp	r18, r1
     1d8:	31 05       	cpc	r19, r1
     1da:	d1 f7       	brne	.-12     	; 0x1d0 <delay_ms+0x10>
     1dc:	4f 5f       	subi	r20, 0xFF	; 255
     1de:	5f 4f       	sbci	r21, 0xFF	; 255
     1e0:	48 17       	cp	r20, r24
     1e2:	59 07       	cpc	r21, r25
     1e4:	19 f0       	breq	.+6      	; 0x1ec <delay_ms+0x2c>
     1e6:	27 2f       	mov	r18, r23
     1e8:	36 2f       	mov	r19, r22
     1ea:	f2 cf       	rjmp	.-28     	; 0x1d0 <delay_ms+0x10>
     1ec:	08 95       	ret

000001ee <LCD_WriteCommand>:
     1ee:	28 98       	cbi	0x05, 0	; 5
     1f0:	8b b9       	out	0x0b, r24	; 11
     1f2:	29 9a       	sbi	0x05, 1	; 5
     1f4:	00 00       	nop
     1f6:	29 98       	cbi	0x05, 1	; 5
     1f8:	82 e0       	ldi	r24, 0x02	; 2
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	e1 cf       	rjmp	.-62     	; 0x1c0 <delay_ms>
     1fe:	08 95       	ret

00000200 <LCD_ClearScreen>:
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	f5 cf       	rjmp	.-22     	; 0x1ee <LCD_WriteCommand>
     204:	08 95       	ret

00000206 <LCD_Cursor>:
     206:	81 31       	cpi	r24, 0x11	; 17
     208:	18 f4       	brcc	.+6      	; 0x210 <LCD_Cursor+0xa>
     20a:	81 58       	subi	r24, 0x81	; 129
     20c:	f0 cf       	rjmp	.-32     	; 0x1ee <LCD_WriteCommand>
     20e:	08 95       	ret
     210:	81 55       	subi	r24, 0x51	; 81
     212:	ed cf       	rjmp	.-38     	; 0x1ee <LCD_WriteCommand>
     214:	08 95       	ret

00000216 <LCD_init>:
     216:	84 e6       	ldi	r24, 0x64	; 100
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	d2 df       	rcall	.-92     	; 0x1c0 <delay_ms>
     21c:	88 e3       	ldi	r24, 0x38	; 56
     21e:	e7 df       	rcall	.-50     	; 0x1ee <LCD_WriteCommand>
     220:	86 e0       	ldi	r24, 0x06	; 6
     222:	e5 df       	rcall	.-54     	; 0x1ee <LCD_WriteCommand>
     224:	8f e0       	ldi	r24, 0x0F	; 15
     226:	e3 df       	rcall	.-58     	; 0x1ee <LCD_WriteCommand>
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	e1 df       	rcall	.-62     	; 0x1ee <LCD_WriteCommand>
     22c:	8a e0       	ldi	r24, 0x0A	; 10
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	c7 cf       	rjmp	.-114    	; 0x1c0 <delay_ms>
     232:	08 95       	ret

00000234 <LCD_WriteData>:
     234:	28 9a       	sbi	0x05, 0	; 5
     236:	8b b9       	out	0x0b, r24	; 11
     238:	29 9a       	sbi	0x05, 1	; 5
     23a:	00 00       	nop
     23c:	29 98       	cbi	0x05, 1	; 5
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	be cf       	rjmp	.-132    	; 0x1c0 <delay_ms>
     244:	08 95       	ret

00000246 <LCD_DisplayString>:
     246:	0f 93       	push	r16
     248:	1f 93       	push	r17
     24a:	cf 93       	push	r28
     24c:	df 93       	push	r29
     24e:	18 2f       	mov	r17, r24
     250:	eb 01       	movw	r28, r22
     252:	d6 df       	rcall	.-84     	; 0x200 <LCD_ClearScreen>
     254:	88 81       	ld	r24, Y
     256:	88 23       	and	r24, r24
     258:	59 f0       	breq	.+22     	; 0x270 <LCD_DisplayString+0x2a>
     25a:	01 e0       	ldi	r16, 0x01	; 1
     25c:	01 0f       	add	r16, r17
     25e:	81 2f       	mov	r24, r17
     260:	d2 df       	rcall	.-92     	; 0x206 <LCD_Cursor>
     262:	89 91       	ld	r24, Y+
     264:	e7 df       	rcall	.-50     	; 0x234 <LCD_WriteData>
     266:	88 81       	ld	r24, Y
     268:	88 23       	and	r24, r24
     26a:	11 f0       	breq	.+4      	; 0x270 <LCD_DisplayString+0x2a>
     26c:	10 2f       	mov	r17, r16
     26e:	f5 cf       	rjmp	.-22     	; 0x25a <LCD_DisplayString+0x14>
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	1f 91       	pop	r17
     276:	0f 91       	pop	r16
     278:	08 95       	ret

0000027a <set_PWM>:
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	6b 01       	movw	r12, r22
     284:	7c 01       	movw	r14, r24
     286:	20 91 cc 04 	lds	r18, 0x04CC
     28a:	30 91 cd 04 	lds	r19, 0x04CD
     28e:	40 91 ce 04 	lds	r20, 0x04CE
     292:	50 91 cf 04 	lds	r21, 0x04CF
     296:	55 d5       	rcall	.+2730   	; 0xd42 <__cmpsf2>
     298:	88 23       	and	r24, r24
     29a:	09 f4       	brne	.+2      	; 0x29e <set_PWM+0x24>
     29c:	52 c0       	rjmp	.+164    	; 0x342 <set_PWM+0xc8>
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	a9 01       	movw	r20, r18
     2a4:	c7 01       	movw	r24, r14
     2a6:	b6 01       	movw	r22, r12
     2a8:	4c d5       	rcall	.+2712   	; 0xd42 <__cmpsf2>
     2aa:	81 11       	cpse	r24, r1
     2ac:	06 c0       	rjmp	.+12     	; 0x2ba <set_PWM+0x40>
     2ae:	e1 e9       	ldi	r30, 0x91	; 145
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	88 70       	andi	r24, 0x08	; 8
     2b6:	80 83       	st	Z, r24
     2b8:	05 c0       	rjmp	.+10     	; 0x2c4 <set_PWM+0x4a>
     2ba:	e1 e9       	ldi	r30, 0x91	; 145
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	80 81       	ld	r24, Z
     2c0:	83 60       	ori	r24, 0x03	; 3
     2c2:	80 83       	st	Z, r24
     2c4:	28 e5       	ldi	r18, 0x58	; 88
     2c6:	39 e3       	ldi	r19, 0x39	; 57
     2c8:	44 e7       	ldi	r20, 0x74	; 116
     2ca:	5f e3       	ldi	r21, 0x3F	; 63
     2cc:	c7 01       	movw	r24, r14
     2ce:	b6 01       	movw	r22, r12
     2d0:	38 d5       	rcall	.+2672   	; 0xd42 <__cmpsf2>
     2d2:	88 23       	and	r24, r24
     2d4:	3c f4       	brge	.+14     	; 0x2e4 <set_PWM+0x6a>
     2d6:	8f ef       	ldi	r24, 0xFF	; 255
     2d8:	9f ef       	ldi	r25, 0xFF	; 255
     2da:	90 93 99 00 	sts	0x0099, r25
     2de:	80 93 98 00 	sts	0x0098, r24
     2e2:	23 c0       	rjmp	.+70     	; 0x32a <set_PWM+0xb0>
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	34 e2       	ldi	r19, 0x24	; 36
     2e8:	44 ef       	ldi	r20, 0xF4	; 244
     2ea:	56 e4       	ldi	r21, 0x46	; 70
     2ec:	c7 01       	movw	r24, r14
     2ee:	b6 01       	movw	r22, r12
     2f0:	3a d6       	rcall	.+3188   	; 0xf66 <__gesf2>
     2f2:	18 16       	cp	r1, r24
     2f4:	2c f4       	brge	.+10     	; 0x300 <set_PWM+0x86>
     2f6:	10 92 99 00 	sts	0x0099, r1
     2fa:	10 92 98 00 	sts	0x0098, r1
     2fe:	15 c0       	rjmp	.+42     	; 0x32a <set_PWM+0xb0>
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	53 e4       	ldi	r21, 0x43	; 67
     308:	c7 01       	movw	r24, r14
     30a:	b6 01       	movw	r22, r12
     30c:	30 d6       	rcall	.+3168   	; 0xf6e <__mulsf3>
     30e:	9b 01       	movw	r18, r22
     310:	ac 01       	movw	r20, r24
     312:	60 e0       	ldi	r22, 0x00	; 0
     314:	74 e2       	ldi	r23, 0x24	; 36
     316:	84 ef       	ldi	r24, 0xF4	; 244
     318:	9a e4       	ldi	r25, 0x4A	; 74
     31a:	17 d5       	rcall	.+2606   	; 0xd4a <__divsf3>
     31c:	7e d5       	rcall	.+2812   	; 0xe1a <__fixsfsi>
     31e:	61 50       	subi	r22, 0x01	; 1
     320:	71 09       	sbc	r23, r1
     322:	70 93 99 00 	sts	0x0099, r23
     326:	60 93 98 00 	sts	0x0098, r22
     32a:	10 92 95 00 	sts	0x0095, r1
     32e:	10 92 94 00 	sts	0x0094, r1
     332:	c0 92 cc 04 	sts	0x04CC, r12
     336:	d0 92 cd 04 	sts	0x04CD, r13
     33a:	e0 92 ce 04 	sts	0x04CE, r14
     33e:	f0 92 cf 04 	sts	0x04CF, r15
     342:	ff 90       	pop	r15
     344:	ef 90       	pop	r14
     346:	df 90       	pop	r13
     348:	cf 90       	pop	r12
     34a:	08 95       	ret

0000034c <PWM_on>:
     34c:	80 e4       	ldi	r24, 0x40	; 64
     34e:	80 93 90 00 	sts	0x0090, r24
     352:	8b e0       	ldi	r24, 0x0B	; 11
     354:	80 93 91 00 	sts	0x0091, r24
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	70 e0       	ldi	r23, 0x00	; 0
     35c:	cb 01       	movw	r24, r22
     35e:	8d cf       	rjmp	.-230    	; 0x27a <set_PWM>
     360:	08 95       	ret

00000362 <light_red>:
     362:	82 b1       	in	r24, 0x02	; 2
     364:	83 70       	andi	r24, 0x03	; 3
     366:	82 b9       	out	0x02, r24	; 2
     368:	88 b1       	in	r24, 0x08	; 8
     36a:	83 60       	ori	r24, 0x03	; 3
     36c:	88 b9       	out	0x08, r24	; 8
     36e:	08 95       	ret

00000370 <light_blue>:
     370:	82 b1       	in	r24, 0x02	; 2
     372:	83 70       	andi	r24, 0x03	; 3
     374:	82 b9       	out	0x02, r24	; 2
     376:	88 b1       	in	r24, 0x08	; 8
     378:	80 6c       	ori	r24, 0xC0	; 192
     37a:	88 b9       	out	0x08, r24	; 8
     37c:	08 95       	ret

0000037e <light_green>:
     37e:	82 b1       	in	r24, 0x02	; 2
     380:	83 70       	andi	r24, 0x03	; 3
     382:	82 b9       	out	0x02, r24	; 2
     384:	88 b1       	in	r24, 0x08	; 8
     386:	80 63       	ori	r24, 0x30	; 48
     388:	88 b9       	out	0x08, r24	; 8
     38a:	08 95       	ret

0000038c <light_none>:
     38c:	8f ef       	ldi	r24, 0xFF	; 255
     38e:	82 b9       	out	0x02, r24	; 2
     390:	18 b8       	out	0x08, r1	; 8
     392:	08 95       	ret

00000394 <update_ledcol>:
     394:	cf 92       	push	r12
     396:	df 92       	push	r13
     398:	ef 92       	push	r14
     39a:	ff 92       	push	r15
     39c:	f7 df       	rcall	.-18     	; 0x38c <light_none>
     39e:	80 91 58 05 	lds	r24, 0x0558
     3a2:	e0 91 d0 04 	lds	r30, 0x04D0
     3a6:	f0 91 d1 04 	lds	r31, 0x04D1
     3aa:	91 e4       	ldi	r25, 0x41	; 65
     3ac:	89 9f       	mul	r24, r25
     3ae:	e0 0d       	add	r30, r0
     3b0:	f1 1d       	adc	r31, r1
     3b2:	11 24       	eor	r1, r1
     3b4:	ee 0f       	add	r30, r30
     3b6:	ff 1f       	adc	r31, r31
     3b8:	ee 0f       	add	r30, r30
     3ba:	ff 1f       	adc	r31, r31
     3bc:	e0 50       	subi	r30, 0x00	; 0
     3be:	ff 4f       	sbci	r31, 0xFF	; 255
     3c0:	c0 80       	ld	r12, Z
     3c2:	d1 80       	ldd	r13, Z+1	; 0x01
     3c4:	e2 80       	ldd	r14, Z+2	; 0x02
     3c6:	f3 80       	ldd	r15, Z+3	; 0x03
     3c8:	2d e7       	ldi	r18, 0x7D	; 125
     3ca:	3f ef       	ldi	r19, 0xFF	; 255
     3cc:	43 ec       	ldi	r20, 0xC3	; 195
     3ce:	52 e4       	ldi	r21, 0x42	; 66
     3d0:	c7 01       	movw	r24, r14
     3d2:	b6 01       	movw	r22, r12
     3d4:	b6 d4       	rcall	.+2412   	; 0xd42 <__cmpsf2>
     3d6:	88 23       	and	r24, r24
     3d8:	09 f4       	brne	.+2      	; 0x3dc <update_ledcol+0x48>
     3da:	85 c0       	rjmp	.+266    	; 0x4e6 <update_ledcol+0x152>
     3dc:	26 ef       	ldi	r18, 0xF6	; 246
     3de:	38 ea       	ldi	r19, 0xA8	; 168
     3e0:	4f ec       	ldi	r20, 0xCF	; 207
     3e2:	52 e4       	ldi	r21, 0x42	; 66
     3e4:	c7 01       	movw	r24, r14
     3e6:	b6 01       	movw	r22, r12
     3e8:	ac d4       	rcall	.+2392   	; 0xd42 <__cmpsf2>
     3ea:	88 23       	and	r24, r24
     3ec:	09 f4       	brne	.+2      	; 0x3f0 <update_ledcol+0x5c>
     3ee:	7b c0       	rjmp	.+246    	; 0x4e6 <update_ledcol+0x152>
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	4c ed       	ldi	r20, 0xDC	; 220
     3f6:	52 e4       	ldi	r21, 0x42	; 66
     3f8:	c7 01       	movw	r24, r14
     3fa:	b6 01       	movw	r22, r12
     3fc:	a2 d4       	rcall	.+2372   	; 0xd42 <__cmpsf2>
     3fe:	88 23       	and	r24, r24
     400:	09 f4       	brne	.+2      	; 0x404 <update_ledcol+0x70>
     402:	71 c0       	rjmp	.+226    	; 0x4e6 <update_ledcol+0x152>
     404:	2b e7       	ldi	r18, 0x7B	; 123
     406:	34 e1       	ldi	r19, 0x14	; 20
     408:	49 ee       	ldi	r20, 0xE9	; 233
     40a:	52 e4       	ldi	r21, 0x42	; 66
     40c:	c7 01       	movw	r24, r14
     40e:	b6 01       	movw	r22, r12
     410:	98 d4       	rcall	.+2352   	; 0xd42 <__cmpsf2>
     412:	88 23       	and	r24, r24
     414:	09 f4       	brne	.+2      	; 0x418 <update_ledcol+0x84>
     416:	67 c0       	rjmp	.+206    	; 0x4e6 <update_ledcol+0x152>
     418:	24 ea       	ldi	r18, 0xA4	; 164
     41a:	30 ef       	ldi	r19, 0xF0	; 240
     41c:	46 ef       	ldi	r20, 0xF6	; 246
     41e:	52 e4       	ldi	r21, 0x42	; 66
     420:	c7 01       	movw	r24, r14
     422:	b6 01       	movw	r22, r12
     424:	8e d4       	rcall	.+2332   	; 0xd42 <__cmpsf2>
     426:	88 23       	and	r24, r24
     428:	09 f4       	brne	.+2      	; 0x42c <update_ledcol+0x98>
     42a:	5d c0       	rjmp	.+186    	; 0x4e6 <update_ledcol+0x152>
     42c:	20 e0       	ldi	r18, 0x00	; 0
     42e:	30 e0       	ldi	r19, 0x00	; 0
     430:	44 e4       	ldi	r20, 0x44	; 68
     432:	53 e4       	ldi	r21, 0x43	; 67
     434:	c7 01       	movw	r24, r14
     436:	b6 01       	movw	r22, r12
     438:	84 d4       	rcall	.+2312   	; 0xd42 <__cmpsf2>
     43a:	88 23       	and	r24, r24
     43c:	09 f4       	brne	.+2      	; 0x440 <update_ledcol+0xac>
     43e:	53 c0       	rjmp	.+166    	; 0x4e6 <update_ledcol+0x152>
     440:	26 e6       	ldi	r18, 0x66	; 102
     442:	36 ea       	ldi	r19, 0xA6	; 166
     444:	4f e4       	ldi	r20, 0x4F	; 79
     446:	53 e4       	ldi	r21, 0x43	; 67
     448:	c7 01       	movw	r24, r14
     44a:	b6 01       	movw	r22, r12
     44c:	7a d4       	rcall	.+2292   	; 0xd42 <__cmpsf2>
     44e:	88 23       	and	r24, r24
     450:	09 f4       	brne	.+2      	; 0x454 <update_ledcol+0xc0>
     452:	49 c0       	rjmp	.+146    	; 0x4e6 <update_ledcol+0x152>
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	30 e0       	ldi	r19, 0x00	; 0
     458:	4c e5       	ldi	r20, 0x5C	; 92
     45a:	53 e4       	ldi	r21, 0x43	; 67
     45c:	c7 01       	movw	r24, r14
     45e:	b6 01       	movw	r22, r12
     460:	70 d4       	rcall	.+2272   	; 0xd42 <__cmpsf2>
     462:	88 23       	and	r24, r24
     464:	09 f4       	brne	.+2      	; 0x468 <update_ledcol+0xd4>
     466:	3f c0       	rjmp	.+126    	; 0x4e6 <update_ledcol+0x152>
     468:	2b e7       	ldi	r18, 0x7B	; 123
     46a:	34 e1       	ldi	r19, 0x14	; 20
     46c:	49 e6       	ldi	r20, 0x69	; 105
     46e:	53 e4       	ldi	r21, 0x43	; 67
     470:	c7 01       	movw	r24, r14
     472:	b6 01       	movw	r22, r12
     474:	66 d4       	rcall	.+2252   	; 0xd42 <__cmpsf2>
     476:	88 23       	and	r24, r24
     478:	b1 f1       	breq	.+108    	; 0x4e6 <update_ledcol+0x152>
     47a:	24 ea       	ldi	r18, 0xA4	; 164
     47c:	30 ef       	ldi	r19, 0xF0	; 240
     47e:	46 e7       	ldi	r20, 0x76	; 118
     480:	53 e4       	ldi	r21, 0x43	; 67
     482:	c7 01       	movw	r24, r14
     484:	b6 01       	movw	r22, r12
     486:	5d d4       	rcall	.+2234   	; 0xd42 <__cmpsf2>
     488:	88 23       	and	r24, r24
     48a:	69 f1       	breq	.+90     	; 0x4e6 <update_ledcol+0x152>
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	44 ec       	ldi	r20, 0xC4	; 196
     492:	53 e4       	ldi	r21, 0x43	; 67
     494:	c7 01       	movw	r24, r14
     496:	b6 01       	movw	r22, r12
     498:	54 d4       	rcall	.+2216   	; 0xd42 <__cmpsf2>
     49a:	88 23       	and	r24, r24
     49c:	21 f1       	breq	.+72     	; 0x4e6 <update_ledcol+0x152>
     49e:	26 e6       	ldi	r18, 0x66	; 102
     4a0:	36 ea       	ldi	r19, 0xA6	; 166
     4a2:	4f ec       	ldi	r20, 0xCF	; 207
     4a4:	53 e4       	ldi	r21, 0x43	; 67
     4a6:	c7 01       	movw	r24, r14
     4a8:	b6 01       	movw	r22, r12
     4aa:	4b d4       	rcall	.+2198   	; 0xd42 <__cmpsf2>
     4ac:	88 23       	and	r24, r24
     4ae:	d9 f0       	breq	.+54     	; 0x4e6 <update_ledcol+0x152>
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	4c ed       	ldi	r20, 0xDC	; 220
     4b6:	53 e4       	ldi	r21, 0x43	; 67
     4b8:	c7 01       	movw	r24, r14
     4ba:	b6 01       	movw	r22, r12
     4bc:	42 d4       	rcall	.+2180   	; 0xd42 <__cmpsf2>
     4be:	88 23       	and	r24, r24
     4c0:	91 f0       	breq	.+36     	; 0x4e6 <update_ledcol+0x152>
     4c2:	2b e7       	ldi	r18, 0x7B	; 123
     4c4:	34 e1       	ldi	r19, 0x14	; 20
     4c6:	49 ee       	ldi	r20, 0xE9	; 233
     4c8:	53 e4       	ldi	r21, 0x43	; 67
     4ca:	c7 01       	movw	r24, r14
     4cc:	b6 01       	movw	r22, r12
     4ce:	39 d4       	rcall	.+2162   	; 0xd42 <__cmpsf2>
     4d0:	88 23       	and	r24, r24
     4d2:	49 f0       	breq	.+18     	; 0x4e6 <update_ledcol+0x152>
     4d4:	24 ea       	ldi	r18, 0xA4	; 164
     4d6:	30 ef       	ldi	r19, 0xF0	; 240
     4d8:	46 ef       	ldi	r20, 0xF6	; 246
     4da:	53 e4       	ldi	r21, 0x43	; 67
     4dc:	c7 01       	movw	r24, r14
     4de:	b6 01       	movw	r22, r12
     4e0:	30 d4       	rcall	.+2144   	; 0xd42 <__cmpsf2>
     4e2:	81 11       	cpse	r24, r1
     4e4:	0c c0       	rjmp	.+24     	; 0x4fe <update_ledcol+0x16a>
     4e6:	3d df       	rcall	.-390    	; 0x362 <light_red>
     4e8:	80 91 55 05 	lds	r24, 0x0555
     4ec:	e8 2f       	mov	r30, r24
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	ed 5e       	subi	r30, 0xED	; 237
     4f2:	fa 4f       	sbci	r31, 0xFA	; 250
     4f4:	92 e5       	ldi	r25, 0x52	; 82
     4f6:	90 83       	st	Z, r25
     4f8:	8f 5f       	subi	r24, 0xFF	; 255
     4fa:	80 93 55 05 	sts	0x0555, r24
     4fe:	80 91 58 05 	lds	r24, 0x0558
     502:	e0 91 d0 04 	lds	r30, 0x04D0
     506:	f0 91 d1 04 	lds	r31, 0x04D1
     50a:	91 e4       	ldi	r25, 0x41	; 65
     50c:	89 9f       	mul	r24, r25
     50e:	e0 0d       	add	r30, r0
     510:	f1 1d       	adc	r31, r1
     512:	11 24       	eor	r1, r1
     514:	ee 0f       	add	r30, r30
     516:	ff 1f       	adc	r31, r31
     518:	ee 0f       	add	r30, r30
     51a:	ff 1f       	adc	r31, r31
     51c:	e0 50       	subi	r30, 0x00	; 0
     51e:	ff 4f       	sbci	r31, 0xFF	; 255
     520:	c0 80       	ld	r12, Z
     522:	d1 80       	ldd	r13, Z+1	; 0x01
     524:	e2 80       	ldd	r14, Z+2	; 0x02
     526:	f3 80       	ldd	r15, Z+3	; 0x03
     528:	2f ed       	ldi	r18, 0xDF	; 223
     52a:	3f ec       	ldi	r19, 0xCF	; 207
     52c:	42 e8       	ldi	r20, 0x82	; 130
     52e:	52 e4       	ldi	r21, 0x42	; 66
     530:	c7 01       	movw	r24, r14
     532:	b6 01       	movw	r22, r12
     534:	06 d4       	rcall	.+2060   	; 0xd42 <__cmpsf2>
     536:	88 23       	and	r24, r24
     538:	09 f4       	brne	.+2      	; 0x53c <update_ledcol+0x1a8>
     53a:	71 c0       	rjmp	.+226    	; 0x61e <update_ledcol+0x28a>
     53c:	2d e8       	ldi	r18, 0x8D	; 141
     53e:	37 e9       	ldi	r19, 0x97	; 151
     540:	4a e8       	ldi	r20, 0x8A	; 138
     542:	52 e4       	ldi	r21, 0x42	; 66
     544:	c7 01       	movw	r24, r14
     546:	b6 01       	movw	r22, r12
     548:	fc d3       	rcall	.+2040   	; 0xd42 <__cmpsf2>
     54a:	88 23       	and	r24, r24
     54c:	09 f4       	brne	.+2      	; 0x550 <update_ledcol+0x1bc>
     54e:	67 c0       	rjmp	.+206    	; 0x61e <update_ledcol+0x28a>
     550:	2e ef       	ldi	r18, 0xFE	; 254
     552:	34 ed       	ldi	r19, 0xD4	; 212
     554:	42 e9       	ldi	r20, 0x92	; 146
     556:	52 e4       	ldi	r21, 0x42	; 66
     558:	c7 01       	movw	r24, r14
     55a:	b6 01       	movw	r22, r12
     55c:	f2 d3       	rcall	.+2020   	; 0xd42 <__cmpsf2>
     55e:	88 23       	and	r24, r24
     560:	09 f4       	brne	.+2      	; 0x564 <update_ledcol+0x1d0>
     562:	5d c0       	rjmp	.+186    	; 0x61e <update_ledcol+0x28a>
     564:	22 e6       	ldi	r18, 0x62	; 98
     566:	30 e9       	ldi	r19, 0x90	; 144
     568:	4b e9       	ldi	r20, 0x9B	; 155
     56a:	52 e4       	ldi	r21, 0x42	; 66
     56c:	c7 01       	movw	r24, r14
     56e:	b6 01       	movw	r22, r12
     570:	e8 d3       	rcall	.+2000   	; 0xd42 <__cmpsf2>
     572:	88 23       	and	r24, r24
     574:	09 f4       	brne	.+2      	; 0x578 <update_ledcol+0x1e4>
     576:	53 c0       	rjmp	.+166    	; 0x61e <update_ledcol+0x28a>
     578:	2c e5       	ldi	r18, 0x5C	; 92
     57a:	3f ec       	ldi	r19, 0xCF	; 207
     57c:	42 e0       	ldi	r20, 0x02	; 2
     57e:	53 e4       	ldi	r21, 0x43	; 67
     580:	c7 01       	movw	r24, r14
     582:	b6 01       	movw	r22, r12
     584:	de d3       	rcall	.+1980   	; 0xd42 <__cmpsf2>
     586:	88 23       	and	r24, r24
     588:	09 f4       	brne	.+2      	; 0x58c <update_ledcol+0x1f8>
     58a:	49 c0       	rjmp	.+146    	; 0x61e <update_ledcol+0x28a>
     58c:	2a e0       	ldi	r18, 0x0A	; 10
     58e:	37 e9       	ldi	r19, 0x97	; 151
     590:	4a e0       	ldi	r20, 0x0A	; 10
     592:	53 e4       	ldi	r21, 0x43	; 67
     594:	c7 01       	movw	r24, r14
     596:	b6 01       	movw	r22, r12
     598:	d4 d3       	rcall	.+1960   	; 0xd42 <__cmpsf2>
     59a:	88 23       	and	r24, r24
     59c:	09 f4       	brne	.+2      	; 0x5a0 <update_ledcol+0x20c>
     59e:	3f c0       	rjmp	.+126    	; 0x61e <update_ledcol+0x28a>
     5a0:	2b e7       	ldi	r18, 0x7B	; 123
     5a2:	34 ed       	ldi	r19, 0xD4	; 212
     5a4:	42 e1       	ldi	r20, 0x12	; 18
     5a6:	53 e4       	ldi	r21, 0x43	; 67
     5a8:	c7 01       	movw	r24, r14
     5aa:	b6 01       	movw	r22, r12
     5ac:	ca d3       	rcall	.+1940   	; 0xd42 <__cmpsf2>
     5ae:	88 23       	and	r24, r24
     5b0:	b1 f1       	breq	.+108    	; 0x61e <update_ledcol+0x28a>
     5b2:	2c e5       	ldi	r18, 0x5C	; 92
     5b4:	3f e8       	ldi	r19, 0x8F	; 143
     5b6:	4b e1       	ldi	r20, 0x1B	; 27
     5b8:	53 e4       	ldi	r21, 0x43	; 67
     5ba:	c7 01       	movw	r24, r14
     5bc:	b6 01       	movw	r22, r12
     5be:	c1 d3       	rcall	.+1922   	; 0xd42 <__cmpsf2>
     5c0:	88 23       	and	r24, r24
     5c2:	69 f1       	breq	.+90     	; 0x61e <update_ledcol+0x28a>
     5c4:	24 ea       	ldi	r18, 0xA4	; 164
     5c6:	30 ed       	ldi	r19, 0xD0	; 208
     5c8:	42 e8       	ldi	r20, 0x82	; 130
     5ca:	53 e4       	ldi	r21, 0x43	; 67
     5cc:	c7 01       	movw	r24, r14
     5ce:	b6 01       	movw	r22, r12
     5d0:	b8 d3       	rcall	.+1904   	; 0xd42 <__cmpsf2>
     5d2:	88 23       	and	r24, r24
     5d4:	21 f1       	breq	.+72     	; 0x61e <update_ledcol+0x28a>
     5d6:	2a e0       	ldi	r18, 0x0A	; 10
     5d8:	37 e9       	ldi	r19, 0x97	; 151
     5da:	4a e8       	ldi	r20, 0x8A	; 138
     5dc:	53 e4       	ldi	r21, 0x43	; 67
     5de:	c7 01       	movw	r24, r14
     5e0:	b6 01       	movw	r22, r12
     5e2:	af d3       	rcall	.+1886   	; 0xd42 <__cmpsf2>
     5e4:	88 23       	and	r24, r24
     5e6:	d9 f0       	breq	.+54     	; 0x61e <update_ledcol+0x28a>
     5e8:	2b e7       	ldi	r18, 0x7B	; 123
     5ea:	34 ed       	ldi	r19, 0xD4	; 212
     5ec:	43 e8       	ldi	r20, 0x83	; 131
     5ee:	53 e4       	ldi	r21, 0x43	; 67
     5f0:	c7 01       	movw	r24, r14
     5f2:	b6 01       	movw	r22, r12
     5f4:	a6 d3       	rcall	.+1868   	; 0xd42 <__cmpsf2>
     5f6:	88 23       	and	r24, r24
     5f8:	91 f0       	breq	.+36     	; 0x61e <update_ledcol+0x28a>
     5fa:	24 ea       	ldi	r18, 0xA4	; 164
     5fc:	30 e9       	ldi	r19, 0x90	; 144
     5fe:	4b e9       	ldi	r20, 0x9B	; 155
     600:	53 e4       	ldi	r21, 0x43	; 67
     602:	c7 01       	movw	r24, r14
     604:	b6 01       	movw	r22, r12
     606:	9d d3       	rcall	.+1850   	; 0xd42 <__cmpsf2>
     608:	88 23       	and	r24, r24
     60a:	49 f0       	breq	.+18     	; 0x61e <update_ledcol+0x28a>
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 ed       	ldi	r19, 0xD0	; 208
     610:	42 e0       	ldi	r20, 0x02	; 2
     612:	54 e4       	ldi	r21, 0x44	; 68
     614:	c7 01       	movw	r24, r14
     616:	b6 01       	movw	r22, r12
     618:	94 d3       	rcall	.+1832   	; 0xd42 <__cmpsf2>
     61a:	81 11       	cpse	r24, r1
     61c:	0c c0       	rjmp	.+24     	; 0x636 <update_ledcol+0x2a2>
     61e:	a8 de       	rcall	.-688    	; 0x370 <light_blue>
     620:	80 91 55 05 	lds	r24, 0x0555
     624:	e8 2f       	mov	r30, r24
     626:	f0 e0       	ldi	r31, 0x00	; 0
     628:	ed 5e       	subi	r30, 0xED	; 237
     62a:	fa 4f       	sbci	r31, 0xFA	; 250
     62c:	92 e4       	ldi	r25, 0x42	; 66
     62e:	90 83       	st	Z, r25
     630:	8f 5f       	subi	r24, 0xFF	; 255
     632:	80 93 55 05 	sts	0x0555, r24
     636:	80 91 58 05 	lds	r24, 0x0558
     63a:	e0 91 d0 04 	lds	r30, 0x04D0
     63e:	f0 91 d1 04 	lds	r31, 0x04D1
     642:	91 e4       	ldi	r25, 0x41	; 65
     644:	89 9f       	mul	r24, r25
     646:	e0 0d       	add	r30, r0
     648:	f1 1d       	adc	r31, r1
     64a:	11 24       	eor	r1, r1
     64c:	ee 0f       	add	r30, r30
     64e:	ff 1f       	adc	r31, r31
     650:	ee 0f       	add	r30, r30
     652:	ff 1f       	adc	r31, r31
     654:	e0 50       	subi	r30, 0x00	; 0
     656:	ff 4f       	sbci	r31, 0xFF	; 255
     658:	c0 80       	ld	r12, Z
     65a:	d1 80       	ldd	r13, Z+1	; 0x01
     65c:	e2 80       	ldd	r14, Z+2	; 0x02
     65e:	f3 80       	ldd	r15, Z+3	; 0x03
     660:	22 e6       	ldi	r18, 0x62	; 98
     662:	30 ed       	ldi	r19, 0xD0	; 208
     664:	44 ea       	ldi	r20, 0xA4	; 164
     666:	52 e4       	ldi	r21, 0x42	; 66
     668:	c7 01       	movw	r24, r14
     66a:	b6 01       	movw	r22, r12
     66c:	6a d3       	rcall	.+1748   	; 0xd42 <__cmpsf2>
     66e:	88 23       	and	r24, r24
     670:	09 f4       	brne	.+2      	; 0x674 <update_ledcol+0x2e0>
     672:	49 c0       	rjmp	.+146    	; 0x706 <update_ledcol+0x372>
     674:	2f e2       	ldi	r18, 0x2F	; 47
     676:	3d e9       	ldi	r19, 0x9D	; 157
     678:	4e ea       	ldi	r20, 0xAE	; 174
     67a:	52 e4       	ldi	r21, 0x42	; 66
     67c:	c7 01       	movw	r24, r14
     67e:	b6 01       	movw	r22, r12
     680:	60 d3       	rcall	.+1728   	; 0xd42 <__cmpsf2>
     682:	88 23       	and	r24, r24
     684:	09 f4       	brne	.+2      	; 0x688 <update_ledcol+0x2f4>
     686:	3f c0       	rjmp	.+126    	; 0x706 <update_ledcol+0x372>
     688:	2d e7       	ldi	r18, 0x7D	; 125
     68a:	3f ef       	ldi	r19, 0xFF	; 255
     68c:	48 eb       	ldi	r20, 0xB8	; 184
     68e:	52 e4       	ldi	r21, 0x42	; 66
     690:	c7 01       	movw	r24, r14
     692:	b6 01       	movw	r22, r12
     694:	56 d3       	rcall	.+1708   	; 0xd42 <__cmpsf2>
     696:	88 23       	and	r24, r24
     698:	b1 f1       	breq	.+108    	; 0x706 <update_ledcol+0x372>
     69a:	2c e5       	ldi	r18, 0x5C	; 92
     69c:	3f ec       	ldi	r19, 0xCF	; 207
     69e:	44 e2       	ldi	r20, 0x24	; 36
     6a0:	53 e4       	ldi	r21, 0x43	; 67
     6a2:	c7 01       	movw	r24, r14
     6a4:	b6 01       	movw	r22, r12
     6a6:	4d d3       	rcall	.+1690   	; 0xd42 <__cmpsf2>
     6a8:	88 23       	and	r24, r24
     6aa:	69 f1       	breq	.+90     	; 0x706 <update_ledcol+0x372>
     6ac:	29 e2       	ldi	r18, 0x29	; 41
     6ae:	3c e9       	ldi	r19, 0x9C	; 156
     6b0:	4e e2       	ldi	r20, 0x2E	; 46
     6b2:	53 e4       	ldi	r21, 0x43	; 67
     6b4:	c7 01       	movw	r24, r14
     6b6:	b6 01       	movw	r22, r12
     6b8:	44 d3       	rcall	.+1672   	; 0xd42 <__cmpsf2>
     6ba:	88 23       	and	r24, r24
     6bc:	21 f1       	breq	.+72     	; 0x706 <update_ledcol+0x372>
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	49 e3       	ldi	r20, 0x39	; 57
     6c4:	53 e4       	ldi	r21, 0x43	; 67
     6c6:	c7 01       	movw	r24, r14
     6c8:	b6 01       	movw	r22, r12
     6ca:	3b d3       	rcall	.+1654   	; 0xd42 <__cmpsf2>
     6cc:	88 23       	and	r24, r24
     6ce:	d9 f0       	breq	.+54     	; 0x706 <update_ledcol+0x372>
     6d0:	24 ea       	ldi	r18, 0xA4	; 164
     6d2:	30 ed       	ldi	r19, 0xD0	; 208
     6d4:	44 ea       	ldi	r20, 0xA4	; 164
     6d6:	53 e4       	ldi	r21, 0x43	; 67
     6d8:	c7 01       	movw	r24, r14
     6da:	b6 01       	movw	r22, r12
     6dc:	32 d3       	rcall	.+1636   	; 0xd42 <__cmpsf2>
     6de:	88 23       	and	r24, r24
     6e0:	91 f0       	breq	.+36     	; 0x706 <update_ledcol+0x372>
     6e2:	21 e7       	ldi	r18, 0x71	; 113
     6e4:	3d e9       	ldi	r19, 0x9D	; 157
     6e6:	4e ea       	ldi	r20, 0xAE	; 174
     6e8:	53 e4       	ldi	r21, 0x43	; 67
     6ea:	c7 01       	movw	r24, r14
     6ec:	b6 01       	movw	r22, r12
     6ee:	29 d3       	rcall	.+1618   	; 0xd42 <__cmpsf2>
     6f0:	88 23       	and	r24, r24
     6f2:	49 f0       	breq	.+18     	; 0x706 <update_ledcol+0x372>
     6f4:	28 eb       	ldi	r18, 0xB8	; 184
     6f6:	3e ef       	ldi	r19, 0xFE	; 254
     6f8:	48 eb       	ldi	r20, 0xB8	; 184
     6fa:	53 e4       	ldi	r21, 0x43	; 67
     6fc:	c7 01       	movw	r24, r14
     6fe:	b6 01       	movw	r22, r12
     700:	20 d3       	rcall	.+1600   	; 0xd42 <__cmpsf2>
     702:	81 11       	cpse	r24, r1
     704:	0c c0       	rjmp	.+24     	; 0x71e <update_ledcol+0x38a>
     706:	3b de       	rcall	.-906    	; 0x37e <light_green>
     708:	80 91 55 05 	lds	r24, 0x0555
     70c:	e8 2f       	mov	r30, r24
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	ed 5e       	subi	r30, 0xED	; 237
     712:	fa 4f       	sbci	r31, 0xFA	; 250
     714:	97 e4       	ldi	r25, 0x47	; 71
     716:	90 83       	st	Z, r25
     718:	8f 5f       	subi	r24, 0xFF	; 255
     71a:	80 93 55 05 	sts	0x0555, r24
     71e:	ff 90       	pop	r15
     720:	ef 90       	pop	r14
     722:	df 90       	pop	r13
     724:	cf 90       	pop	r12
     726:	08 95       	ret

00000728 <Set_Display>:
}

void Set_Display(char *new_label, char number)
{
     728:	0f 93       	push	r16
     72a:	1f 93       	push	r17
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	00 d0       	rcall	.+0      	; 0x732 <Set_Display+0xa>
     732:	cd b7       	in	r28, 0x3d	; 61
     734:	de b7       	in	r29, 0x3e	; 62
     736:	16 2f       	mov	r17, r22
	if(number < 99)
     738:	63 36       	cpi	r22, 0x63	; 99
     73a:	00 f5       	brcc	.+64     	; 0x77c <Set_Display+0x54>
	{
		strcpy(label_g, new_label);
     73c:	bc 01       	movw	r22, r24
     73e:	8c e0       	ldi	r24, 0x0C	; 12
     740:	94 e0       	ldi	r25, 0x04	; 4
     742:	89 d4       	rcall	.+2322   	; 0x1056 <strcpy>
		char numstr[2];
		snprintf(numstr, 2, "%d", number);
     744:	1f 92       	push	r1
     746:	1f 93       	push	r17
     748:	80 e5       	ldi	r24, 0x50	; 80
     74a:	94 e0       	ldi	r25, 0x04	; 4
     74c:	9f 93       	push	r25
     74e:	8f 93       	push	r24
     750:	1f 92       	push	r1
     752:	82 e0       	ldi	r24, 0x02	; 2
     754:	8f 93       	push	r24
     756:	8e 01       	movw	r16, r28
     758:	0f 5f       	subi	r16, 0xFF	; 255
     75a:	1f 4f       	sbci	r17, 0xFF	; 255
     75c:	1f 93       	push	r17
     75e:	0f 93       	push	r16
     760:	81 d4       	rcall	.+2306   	; 0x1064 <snprintf>
		strcat(label_g, numstr);
     762:	b8 01       	movw	r22, r16
     764:	8c e0       	ldi	r24, 0x0C	; 12
     766:	94 e0       	ldi	r25, 0x04	; 4
     768:	6b d4       	rcall	.+2262   	; 0x1040 <strcat>
		set_display = 1;
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	80 93 56 05 	sts	0x0556, r24
     770:	0f b6       	in	r0, 0x3f	; 63
     772:	f8 94       	cli
     774:	de bf       	out	0x3e, r29	; 62
     776:	0f be       	out	0x3f, r0	; 63
     778:	cd bf       	out	0x3d, r28	; 61
     77a:	1a c0       	rjmp	.+52     	; 0x7b0 <Set_Display+0x88>
		
	}
	else if (number == 0)
     77c:	61 11       	cpse	r22, r1
     77e:	11 c0       	rjmp	.+34     	; 0x7a2 <Set_Display+0x7a>
	{
		strcpy(label_g, new_label);
     780:	bc 01       	movw	r22, r24
     782:	8c e0       	ldi	r24, 0x0C	; 12
     784:	94 e0       	ldi	r25, 0x04	; 4
     786:	67 d4       	rcall	.+2254   	; 0x1056 <strcpy>
		strcpy(label_g, " 0");
     788:	80 e2       	ldi	r24, 0x20	; 32
     78a:	90 e3       	ldi	r25, 0x30	; 48
     78c:	a0 e0       	ldi	r26, 0x00	; 0
     78e:	80 93 0c 04 	sts	0x040C, r24
     792:	90 93 0d 04 	sts	0x040D, r25
     796:	a0 93 0e 04 	sts	0x040E, r26
		set_display = 1;
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	80 93 56 05 	sts	0x0556, r24
     7a0:	07 c0       	rjmp	.+14     	; 0x7b0 <Set_Display+0x88>
		
	}
	else
	{
		strcpy(label_g, new_label);
     7a2:	bc 01       	movw	r22, r24
     7a4:	8c e0       	ldi	r24, 0x0C	; 12
     7a6:	94 e0       	ldi	r25, 0x04	; 4
     7a8:	56 d4       	rcall	.+2220   	; 0x1056 <strcpy>
		set_display = 1;
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	80 93 56 05 	sts	0x0556, r24
	}
}
     7b0:	0f 90       	pop	r0
     7b2:	0f 90       	pop	r0
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	1f 91       	pop	r17
     7ba:	0f 91       	pop	r16
     7bc:	08 95       	ret

000007be <display_notes_played>:
	PORTC = 0x00;
}

void display_notes_played()
{
	Set_Display(play_buffer, 99);
     7be:	63 e6       	ldi	r22, 0x63	; 99
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	83 e1       	ldi	r24, 0x13	; 19
     7c4:	95 e0       	ldi	r25, 0x05	; 5
     7c6:	b0 cf       	rjmp	.-160    	; 0x728 <Set_Display>
     7c8:	08 95       	ret

000007ca <display_notes_input>:
}

void display_notes_input()
{
	Set_Display(input_buffer, 99);
     7ca:	63 e6       	ldi	r22, 0x63	; 99
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	82 ed       	ldi	r24, 0xD2	; 210
     7d0:	94 e0       	ldi	r25, 0x04	; 4
     7d2:	aa cf       	rjmp	.-172    	; 0x728 <Set_Display>
     7d4:	08 95       	ret

000007d6 <display_score>:
}

void display_score()
{
	for(int i = 0; i < notes_played; i++)
     7d6:	20 91 55 05 	lds	r18, 0x0555
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	12 16       	cp	r1, r18
     7de:	13 06       	cpc	r1, r19
     7e0:	9c f4       	brge	.+38     	; 0x808 <display_score+0x32>
     7e2:	60 91 57 05 	lds	r22, 0x0557
     7e6:	a2 ed       	ldi	r26, 0xD2	; 210
     7e8:	b4 e0       	ldi	r27, 0x04	; 4
     7ea:	e3 e1       	ldi	r30, 0x13	; 19
     7ec:	f5 e0       	ldi	r31, 0x05	; 5
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	90 e0       	ldi	r25, 0x00	; 0
	{
		if(input_buffer[i] == play_buffer[i])
     7f2:	5d 91       	ld	r21, X+
     7f4:	41 91       	ld	r20, Z+
     7f6:	54 13       	cpse	r21, r20
     7f8:	01 c0       	rjmp	.+2      	; 0x7fc <display_score+0x26>
		{
			score++;
     7fa:	6f 5f       	subi	r22, 0xFF	; 255
	Set_Display(input_buffer, 99);
}

void display_score()
{
	for(int i = 0; i < notes_played; i++)
     7fc:	01 96       	adiw	r24, 0x01	; 1
     7fe:	82 17       	cp	r24, r18
     800:	93 07       	cpc	r25, r19
     802:	bc f3       	brlt	.-18     	; 0x7f2 <display_score+0x1c>
     804:	60 93 57 05 	sts	0x0557, r22
		{
			score++;
		}
	}
	
	Set_Display("Score:", score);
     808:	60 91 57 05 	lds	r22, 0x0557
     80c:	70 e0       	ldi	r23, 0x00	; 0
     80e:	83 e5       	ldi	r24, 0x53	; 83
     810:	94 e0       	ldi	r25, 0x04	; 4
     812:	8a cf       	rjmp	.-236    	; 0x728 <Set_Display>
     814:	08 95       	ret

00000816 <Enable_PWM>:

//State Machines
enum Spk_States { Spk_SMLStart, SpkTone} Spk_State;
void Enable_PWM()
{
	switch(Spk_State)
     816:	80 91 68 05 	lds	r24, 0x0568
     81a:	88 23       	and	r24, r24
     81c:	19 f0       	breq	.+6      	; 0x824 <Enable_PWM+0xe>
     81e:	81 30       	cpi	r24, 0x01	; 1
     820:	41 f0       	breq	.+16     	; 0x832 <Enable_PWM+0x1c>
     822:	04 c0       	rjmp	.+8      	; 0x82c <Enable_PWM+0x16>
	{
		case(Spk_SMLStart): Spk_State = SpkTone; break;
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	80 93 68 05 	sts	0x0568, r24
     82a:	03 c0       	rjmp	.+6      	; 0x832 <Enable_PWM+0x1c>
		case(SpkTone): Spk_State = SpkTone; break;
		default: Spk_State = Spk_SMLStart; break;
     82c:	10 92 68 05 	sts	0x0568, r1
     830:	08 95       	ret
	}
	switch(Spk_State)
	{
		case(Spk_SMLStart): break;
		case(SpkTone): set_PWM(frequency_g); break;
     832:	60 91 5b 05 	lds	r22, 0x055B
     836:	70 91 5c 05 	lds	r23, 0x055C
     83a:	80 91 5d 05 	lds	r24, 0x055D
     83e:	90 91 5e 05 	lds	r25, 0x055E
     842:	1b cd       	rjmp	.-1482   	; 0x27a <set_PWM>
     844:	08 95       	ret

00000846 <Song>:
}

enum Song_States { SLInit, SWait, SPlay, SSetSong,SEnd } Song_State;
void Song()
{
	switch(Song_State)
     846:	80 91 64 05 	lds	r24, 0x0564
     84a:	82 30       	cpi	r24, 0x02	; 2
     84c:	e1 f0       	breq	.+56     	; 0x886 <Song+0x40>
     84e:	28 f4       	brcc	.+10     	; 0x85a <Song+0x14>
     850:	88 23       	and	r24, r24
     852:	41 f0       	breq	.+16     	; 0x864 <Song+0x1e>
     854:	81 30       	cpi	r24, 0x01	; 1
     856:	51 f0       	breq	.+20     	; 0x86c <Song+0x26>
     858:	43 c0       	rjmp	.+134    	; 0x8e0 <Song+0x9a>
     85a:	83 30       	cpi	r24, 0x03	; 3
     85c:	81 f0       	breq	.+32     	; 0x87e <Song+0x38>
     85e:	84 30       	cpi	r24, 0x04	; 4
     860:	d9 f1       	breq	.+118    	; 0x8d8 <Song+0x92>
     862:	3e c0       	rjmp	.+124    	; 0x8e0 <Song+0x9a>
	{
		case SLInit: Song_State = SWait; break;
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	80 93 64 05 	sts	0x0564, r24
     86a:	08 95       	ret
		case SWait:	if (play_music) {Song_State = SSetSong;} else{Song_State = SWait;} break;
     86c:	80 91 5a 05 	lds	r24, 0x055A
     870:	88 23       	and	r24, r24
     872:	09 f4       	brne	.+2      	; 0x876 <Song+0x30>
     874:	5c c0       	rjmp	.+184    	; 0x92e <Song+0xe8>
     876:	83 e0       	ldi	r24, 0x03	; 3
     878:	80 93 64 05 	sts	0x0564, r24
     87c:	08 95       	ret
		case SSetSong: Song_State = SPlay; break;
     87e:	82 e0       	ldi	r24, 0x02	; 2
     880:	80 93 64 05 	sts	0x0564, r24
     884:	30 c0       	rjmp	.+96     	; 0x8e6 <Song+0xa0>
		case SPlay:	if ((melody1[difficulty][melody_counter]) == MUSIC_END){Song_State = SEnd;} else{Song_State = SPlay;} break;
     886:	80 91 58 05 	lds	r24, 0x0558
     88a:	e0 91 d0 04 	lds	r30, 0x04D0
     88e:	f0 91 d1 04 	lds	r31, 0x04D1
     892:	91 e4       	ldi	r25, 0x41	; 65
     894:	89 9f       	mul	r24, r25
     896:	e0 0d       	add	r30, r0
     898:	f1 1d       	adc	r31, r1
     89a:	11 24       	eor	r1, r1
     89c:	ee 0f       	add	r30, r30
     89e:	ff 1f       	adc	r31, r31
     8a0:	ee 0f       	add	r30, r30
     8a2:	ff 1f       	adc	r31, r31
     8a4:	e0 50       	subi	r30, 0x00	; 0
     8a6:	ff 4f       	sbci	r31, 0xFF	; 255
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	40 e8       	ldi	r20, 0x80	; 128
     8ae:	5f e3       	ldi	r21, 0x3F	; 63
     8b0:	60 81       	ld	r22, Z
     8b2:	71 81       	ldd	r23, Z+1	; 0x01
     8b4:	82 81       	ldd	r24, Z+2	; 0x02
     8b6:	93 81       	ldd	r25, Z+3	; 0x03
     8b8:	44 d2       	rcall	.+1160   	; 0xd42 <__cmpsf2>
     8ba:	81 11       	cpse	r24, r1
     8bc:	14 c0       	rjmp	.+40     	; 0x8e6 <Song+0xa0>
     8be:	84 e0       	ldi	r24, 0x04	; 4
     8c0:	80 93 64 05 	sts	0x0564, r24
	{
		case SLInit: break;
		case SWait: /*frequency(OO);	*/break;
		case SSetSong: break;
		case SPlay: /*PWM_on();*/ frequency(melody1[difficulty][melody_counter]); melody_counter++; break;
		case SEnd: /*PWM_off();*/ melody_counter = 0; music_end = 1, play_music = 0; break;
     8c4:	10 92 d1 04 	sts	0x04D1, r1
     8c8:	10 92 d0 04 	sts	0x04D0, r1
     8cc:	81 e0       	ldi	r24, 0x01	; 1
     8ce:	80 93 59 05 	sts	0x0559, r24
     8d2:	10 92 5a 05 	sts	0x055A, r1
     8d6:	08 95       	ret
	{
		case SLInit: Song_State = SWait; break;
		case SWait:	if (play_music) {Song_State = SSetSong;} else{Song_State = SWait;} break;
		case SSetSong: Song_State = SPlay; break;
		case SPlay:	if ((melody1[difficulty][melody_counter]) == MUSIC_END){Song_State = SEnd;} else{Song_State = SPlay;} break;
		case SEnd:	Song_State = SWait; break;
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	80 93 64 05 	sts	0x0564, r24
     8de:	08 95       	ret
		default: Song_State = SLInit; break;
     8e0:	10 92 64 05 	sts	0x0564, r1
     8e4:	08 95       	ret
	switch(Song_State)
	{
		case SLInit: break;
		case SWait: /*frequency(OO);	*/break;
		case SSetSong: break;
		case SPlay: /*PWM_on();*/ frequency(melody1[difficulty][melody_counter]); melody_counter++; break;
     8e6:	20 91 d0 04 	lds	r18, 0x04D0
     8ea:	30 91 d1 04 	lds	r19, 0x04D1
     8ee:	80 91 58 05 	lds	r24, 0x0558
     8f2:	f9 01       	movw	r30, r18
     8f4:	91 e4       	ldi	r25, 0x41	; 65
     8f6:	89 9f       	mul	r24, r25
     8f8:	e0 0d       	add	r30, r0
     8fa:	f1 1d       	adc	r31, r1
     8fc:	11 24       	eor	r1, r1
     8fe:	ee 0f       	add	r30, r30
     900:	ff 1f       	adc	r31, r31
     902:	ee 0f       	add	r30, r30
     904:	ff 1f       	adc	r31, r31
     906:	e0 50       	subi	r30, 0x00	; 0
     908:	ff 4f       	sbci	r31, 0xFF	; 255
	}
}

void frequency(double f)
{
	frequency_g = f;
     90a:	80 81       	ld	r24, Z
     90c:	91 81       	ldd	r25, Z+1	; 0x01
     90e:	a2 81       	ldd	r26, Z+2	; 0x02
     910:	b3 81       	ldd	r27, Z+3	; 0x03
     912:	80 93 5b 05 	sts	0x055B, r24
     916:	90 93 5c 05 	sts	0x055C, r25
     91a:	a0 93 5d 05 	sts	0x055D, r26
     91e:	b0 93 5e 05 	sts	0x055E, r27
	switch(Song_State)
	{
		case SLInit: break;
		case SWait: /*frequency(OO);	*/break;
		case SSetSong: break;
		case SPlay: /*PWM_on();*/ frequency(melody1[difficulty][melody_counter]); melody_counter++; break;
     922:	2f 5f       	subi	r18, 0xFF	; 255
     924:	3f 4f       	sbci	r19, 0xFF	; 255
     926:	30 93 d1 04 	sts	0x04D1, r19
     92a:	20 93 d0 04 	sts	0x04D0, r18
     92e:	08 95       	ret

00000930 <LED>:
	}
}

enum LED_States {LInit, LWait, LStart, LCycle} LED_state;
void LED() {
	switch (LED_state) {
     930:	80 91 69 05 	lds	r24, 0x0569
     934:	81 30       	cpi	r24, 0x01	; 1
     936:	51 f0       	breq	.+20     	; 0x94c <LED+0x1c>
     938:	28 f0       	brcs	.+10     	; 0x944 <LED+0x14>
     93a:	82 30       	cpi	r24, 0x02	; 2
     93c:	91 f0       	breq	.+36     	; 0x962 <LED+0x32>
     93e:	83 30       	cpi	r24, 0x03	; 3
     940:	a1 f0       	breq	.+40     	; 0x96a <LED+0x3a>
     942:	1a c0       	rjmp	.+52     	; 0x978 <LED+0x48>
		case LInit: LED_state = LWait; break;
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	80 93 69 05 	sts	0x0569, r24
     94a:	08 95       	ret
		case LWait: if(play_music){ LED_state = LStart;} else { LED_state = LInit;} break;
     94c:	80 91 5a 05 	lds	r24, 0x055A
     950:	88 23       	and	r24, r24
     952:	21 f0       	breq	.+8      	; 0x95c <LED+0x2c>
     954:	82 e0       	ldi	r24, 0x02	; 2
     956:	80 93 69 05 	sts	0x0569, r24
     95a:	08 95       	ret
     95c:	10 92 69 05 	sts	0x0569, r1
     960:	08 95       	ret
		case LStart: LED_state = LCycle; break;
     962:	83 e0       	ldi	r24, 0x03	; 3
     964:	80 93 69 05 	sts	0x0569, r24
     968:	0a c0       	rjmp	.+20     	; 0x97e <LED+0x4e>
		case LCycle: if(music_end) { LED_state = LInit;} else{LED_state = LCycle;} break;
     96a:	80 91 59 05 	lds	r24, 0x0559
     96e:	88 23       	and	r24, r24
     970:	31 f0       	breq	.+12     	; 0x97e <LED+0x4e>
     972:	10 92 69 05 	sts	0x0569, r1
     976:	08 95       	ret
		default:  LED_state = LInit; break;
     978:	10 92 69 05 	sts	0x0569, r1
     97c:	08 95       	ret
		case LInit:
			break;
		case LStart:
			break;
		case LCycle:
			update_ledcol();
     97e:	0a cd       	rjmp	.-1516   	; 0x394 <update_ledcol>
     980:	08 95       	ret

00000982 <LCD>:
	}
};

enum LCD_States {LCDwait, LCDchange_string} LCD_state;
void LCD() {
	switch (LCD_state)
     982:	80 91 67 05 	lds	r24, 0x0567
     986:	88 23       	and	r24, r24
     988:	19 f0       	breq	.+6      	; 0x990 <LCD+0xe>
     98a:	81 30       	cpi	r24, 0x01	; 1
     98c:	49 f0       	breq	.+18     	; 0x9a0 <LCD+0x1e>
     98e:	0b c0       	rjmp	.+22     	; 0x9a6 <LCD+0x24>
	{
		case LCDwait:
			if(set_display)
     990:	80 91 56 05 	lds	r24, 0x0556
     994:	88 23       	and	r24, r24
     996:	99 f0       	breq	.+38     	; 0x9be <LCD+0x3c>
			{
				LCD_state = LCDchange_string; break;
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	80 93 67 05 	sts	0x0567, r24
     99e:	09 c0       	rjmp	.+18     	; 0x9b2 <LCD+0x30>
			else
			{
				LCD_state = LCDwait; break;
			}
			break;
		case LCDchange_string: LCD_state = LCDwait; break;
     9a0:	10 92 67 05 	sts	0x0567, r1
     9a4:	08 95       	ret
		default:  LED_state = LCDwait; break;
     9a6:	10 92 69 05 	sts	0x0569, r1
	}
	switch (LCD_state)
     9aa:	80 91 67 05 	lds	r24, 0x0567
     9ae:	81 30       	cpi	r24, 0x01	; 1
     9b0:	31 f4       	brne	.+12     	; 0x9be <LCD+0x3c>
	{
		case LCDwait: break;
		case LCDchange_string:
			LCD_DisplayString(1, label_g);
     9b2:	6c e0       	ldi	r22, 0x0C	; 12
     9b4:	74 e0       	ldi	r23, 0x04	; 4
     9b6:	81 e0       	ldi	r24, 0x01	; 1
     9b8:	46 dc       	rcall	.-1908   	; 0x246 <LCD_DisplayString>
			set_display = 0;
     9ba:	10 92 56 05 	sts	0x0556, r1
     9be:	08 95       	ret

000009c0 <input>:
	}
}

enum I__States { I__Init, I__WaitStart, I__SelectDiff, I__DiffAdd, I__DiffAddL, I__PlayMusic, I__PlayMusicWait, I__CaptureInput, I__RInput, I__RInputL, I__WaitInput, I__DisplayPlayedN, I__WaitPlayedN, I__WaitShowScore, I__WaitShowScoreL, I__WaitStartL, I__SelectDiffL, I__BInput, I__BInputL, I__GInput, I__GInputL, I__DisplayInputN, I__WaitInputN, I__WaitInputL, I__ShowScore, I__WaitPlayedNL, I__WaitInputNL } I__State;
void input() {
switch(I__State) { // Transitions
     9c0:	80 91 6a 05 	lds	r24, 0x056A
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	8b 31       	cpi	r24, 0x1B	; 27
     9c8:	91 05       	cpc	r25, r1
     9ca:	08 f0       	brcs	.+2      	; 0x9ce <input+0xe>
     9cc:	01 c1       	rjmp	.+514    	; 0xbd0 <input+0x210>
     9ce:	fc 01       	movw	r30, r24
     9d0:	ea 5b       	subi	r30, 0xBA	; 186
     9d2:	ff 4f       	sbci	r31, 0xFF	; 255
     9d4:	2f c3       	rjmp	.+1630   	; 0x1034 <__tablejump2__>
      case -1:
         I__State = I__Init;
         break;
         case I__Init: 
         if (1) {
            I__State = I__WaitStart;
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     9dc:	3a c1       	rjmp	.+628    	; 0xc52 <input+0x292>
      case I__WaitStart: 
         if (!(~PINB & 0x04)) {
     9de:	1a 99       	sbic	0x03, 2	; 3
     9e0:	38 c1       	rjmp	.+624    	; 0xc52 <input+0x292>
            I__State = I__WaitStart;
         }
         else if ((~PINB & 0x04)) {
     9e2:	1a 99       	sbic	0x03, 2	; 3
     9e4:	36 c1       	rjmp	.+620    	; 0xc52 <input+0x292>
            I__State = I__WaitStartL;
     9e6:	8f e0       	ldi	r24, 0x0F	; 15
     9e8:	80 93 6a 05 	sts	0x056A, r24
     9ec:	08 95       	ret
         }
         break;
      case I__SelectDiff: 
         if ((~PINB & 0x08)) {
     9ee:	1b 99       	sbic	0x03, 3	; 3
     9f0:	0d c0       	rjmp	.+26     	; 0xa0c <input+0x4c>
            I__State = I__DiffAdd;
     9f2:	83 e0       	ldi	r24, 0x03	; 3
     9f4:	80 93 6a 05 	sts	0x056A, r24
			break;
		case I__SelectDiff:
			Set_Display("Difficulty: ", difficulty+1);
			break;
		case I__DiffAdd:
			Set_Display("Diff. Changed", 99);
     9f8:	63 e6       	ldi	r22, 0x63	; 99
     9fa:	8a e5       	ldi	r24, 0x5A	; 90
     9fc:	94 e0       	ldi	r25, 0x04	; 4
     9fe:	94 de       	rcall	.-728    	; 0x728 <Set_Display>
			if (difficulty < 2)
     a00:	80 91 58 05 	lds	r24, 0x0558
     a04:	82 30       	cpi	r24, 0x02	; 2
     a06:	08 f0       	brcs	.+2      	; 0xa0a <input+0x4a>
     a08:	f7 c0       	rjmp	.+494    	; 0xbf8 <input+0x238>
     a0a:	f2 c0       	rjmp	.+484    	; 0xbf0 <input+0x230>
         break;
      case I__SelectDiff: 
         if ((~PINB & 0x08)) {
            I__State = I__DiffAdd;
         }
         else if ((~PINB & 0x04)) {
     a0c:	1a 99       	sbic	0x03, 2	; 3
     a0e:	32 c1       	rjmp	.+612    	; 0xc74 <input+0x2b4>
            I__State = I__SelectDiffL;
     a10:	80 e1       	ldi	r24, 0x10	; 16
     a12:	80 93 6a 05 	sts	0x056A, r24
     a16:	08 95       	ret
         }
         break;
      case I__DiffAdd: 
         if (1) {
            I__State = I__DiffAddL;
     a18:	84 e0       	ldi	r24, 0x04	; 4
     a1a:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     a1e:	08 95       	ret
      case I__DiffAddL: 
         if ((~PINB & 0x08)) {
     a20:	1b 9b       	sbis	0x03, 3	; 3
     a22:	41 c1       	rjmp	.+642    	; 0xca6 <input+0x2e6>
            I__State = I__DiffAddL;
         }
         else if (!(~PINB & 0x08)) {
     a24:	1b 9b       	sbis	0x03, 3	; 3
     a26:	3f c1       	rjmp	.+638    	; 0xca6 <input+0x2e6>
            I__State = I__SelectDiff;
     a28:	82 e0       	ldi	r24, 0x02	; 2
     a2a:	80 93 6a 05 	sts	0x056A, r24
     a2e:	22 c1       	rjmp	.+580    	; 0xc74 <input+0x2b4>
         }
         break;
      case I__PlayMusic: 
         if (1) {
            I__State = I__PlayMusicWait;
     a30:	86 e0       	ldi	r24, 0x06	; 6
     a32:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     a36:	25 c1       	rjmp	.+586    	; 0xc82 <input+0x2c2>
      case I__PlayMusicWait: 
         if (!(music_end)) {
     a38:	80 91 59 05 	lds	r24, 0x0559
     a3c:	88 23       	and	r24, r24
     a3e:	09 f4       	brne	.+2      	; 0xa42 <input+0x82>
     a40:	20 c1       	rjmp	.+576    	; 0xc82 <input+0x2c2>
            I__State = I__PlayMusicWait;
         }
         else if (music_end) {
            I__State = I__CaptureInput;
     a42:	87 e0       	ldi	r24, 0x07	; 7
     a44:	80 93 6a 05 	sts	0x056A, r24
     a48:	08 95       	ret
         }
         break;
      case I__CaptureInput: 
         if (1) {
            I__State = I__WaitInput;
     a4a:	8a e0       	ldi	r24, 0x0A	; 10
     a4c:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     a50:	d6 c0       	rjmp	.+428    	; 0xbfe <input+0x23e>
      case I__RInput: 
         if (1) {
            I__State = I__RInputL;
     a52:	89 e0       	ldi	r24, 0x09	; 9
     a54:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     a58:	19 c1       	rjmp	.+562    	; 0xc8c <input+0x2cc>
      case I__RInputL: 
         if (!(~PINB & 0x08)) {
     a5a:	1b 9b       	sbis	0x03, 3	; 3
     a5c:	04 c0       	rjmp	.+8      	; 0xa66 <input+0xa6>
            I__State = I__WaitInput;
     a5e:	8a e0       	ldi	r24, 0x0A	; 10
     a60:	80 93 6a 05 	sts	0x056A, r24
     a64:	cc c0       	rjmp	.+408    	; 0xbfe <input+0x23e>
         }
         else if ((~PINB & 0x08)) {
     a66:	83 b1       	in	r24, 0x03	; 3
     a68:	11 c1       	rjmp	.+546    	; 0xc8c <input+0x2cc>
            I__State = I__RInputL;
         }
         break;
      case I__WaitInput: 
         if ((~PINB & 0x08)) {
     a6a:	1b 99       	sbic	0x03, 3	; 3
     a6c:	13 c0       	rjmp	.+38     	; 0xa94 <input+0xd4>
            I__State = I__RInput;
     a6e:	88 e0       	ldi	r24, 0x08	; 8
     a70:	80 93 6a 05 	sts	0x056A, r24
		case I__CaptureInput:
			//all led off
			break;
		case I__RInput:
			//LOW input
			Set_Display("Red Selected", 99);
     a74:	63 e6       	ldi	r22, 0x63	; 99
     a76:	88 e6       	ldi	r24, 0x68	; 104
     a78:	94 e0       	ldi	r25, 0x04	; 4
     a7a:	56 de       	rcall	.-852    	; 0x728 <Set_Display>
			input_buffer[notes_input] = 'R';
     a7c:	80 91 54 05 	lds	r24, 0x0554
     a80:	e8 2f       	mov	r30, r24
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	ee 52       	subi	r30, 0x2E	; 46
     a86:	fb 4f       	sbci	r31, 0xFB	; 251
     a88:	92 e5       	ldi	r25, 0x52	; 82
     a8a:	90 83       	st	Z, r25
			notes_input++;
     a8c:	8f 5f       	subi	r24, 0xFF	; 255
     a8e:	80 93 54 05 	sts	0x0554, r24
			break;
     a92:	08 95       	ret
         break;
      case I__WaitInput: 
         if ((~PINB & 0x08)) {
            I__State = I__RInput;
         }
         else if ((~PINB & 0x20)) {
     a94:	1d 99       	sbic	0x03, 5	; 3
     a96:	13 c0       	rjmp	.+38     	; 0xabe <input+0xfe>
            I__State = I__GInput;
     a98:	83 e1       	ldi	r24, 0x13	; 19
     a9a:	80 93 6a 05 	sts	0x056A, r24
			frequency(D3);
			break;
		case I__GInput:
			//LOW input
			//GLED on
			Set_Display("Green Selected", 99);
     a9e:	63 e6       	ldi	r22, 0x63	; 99
     aa0:	85 e7       	ldi	r24, 0x75	; 117
     aa2:	94 e0       	ldi	r25, 0x04	; 4
     aa4:	41 de       	rcall	.-894    	; 0x728 <Set_Display>
			input_buffer[notes_input] = 'G';
     aa6:	80 91 54 05 	lds	r24, 0x0554
     aaa:	e8 2f       	mov	r30, r24
     aac:	f0 e0       	ldi	r31, 0x00	; 0
     aae:	ee 52       	subi	r30, 0x2E	; 46
     ab0:	fb 4f       	sbci	r31, 0xFB	; 251
     ab2:	97 e4       	ldi	r25, 0x47	; 71
     ab4:	90 83       	st	Z, r25
			notes_input++;
     ab6:	8f 5f       	subi	r24, 0xFF	; 255
     ab8:	80 93 54 05 	sts	0x0554, r24
			break;
     abc:	08 95       	ret
            I__State = I__RInput;
         }
         else if ((~PINB & 0x20)) {
            I__State = I__GInput;
         }
         else if ((~PINB & 0x80)) {
     abe:	1f 99       	sbic	0x03, 7	; 3
     ac0:	13 c0       	rjmp	.+38     	; 0xae8 <input+0x128>
            I__State = I__BInput;
     ac2:	81 e1       	ldi	r24, 0x11	; 17
     ac4:	80 93 6a 05 	sts	0x056A, r24
		case I__SelectDiffL:
			break;
		case I__BInput:
			//LOW input
			//BLED on
			Set_Display("Blue Selected", 99);
     ac8:	63 e6       	ldi	r22, 0x63	; 99
     aca:	84 e8       	ldi	r24, 0x84	; 132
     acc:	94 e0       	ldi	r25, 0x04	; 4
     ace:	2c de       	rcall	.-936    	; 0x728 <Set_Display>
			input_buffer[notes_input] = 'B';
     ad0:	80 91 54 05 	lds	r24, 0x0554
     ad4:	e8 2f       	mov	r30, r24
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	ee 52       	subi	r30, 0x2E	; 46
     ada:	fb 4f       	sbci	r31, 0xFB	; 251
     adc:	92 e4       	ldi	r25, 0x42	; 66
     ade:	90 83       	st	Z, r25
			notes_input++;
     ae0:	8f 5f       	subi	r24, 0xFF	; 255
     ae2:	80 93 54 05 	sts	0x0554, r24
			break;
     ae6:	08 95       	ret
            I__State = I__GInput;
         }
         else if ((~PINB & 0x80)) {
            I__State = I__BInput;
         }
         else if ((~PINB & 0x04)) {
     ae8:	1a 99       	sbic	0x03, 2	; 3
     aea:	89 c0       	rjmp	.+274    	; 0xbfe <input+0x23e>
            I__State = I__WaitInputL;
     aec:	87 e1       	ldi	r24, 0x17	; 23
     aee:	80 93 6a 05 	sts	0x056A, r24
     af2:	08 95       	ret
         }
         break;
      case I__DisplayPlayedN: 
         if (1) {
            I__State = I__WaitPlayedN;
     af4:	8c e0       	ldi	r24, 0x0C	; 12
     af6:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     afa:	08 95       	ret
      case I__WaitPlayedN: 
         if ((~PINB & 0x04)) {
     afc:	1a 99       	sbic	0x03, 2	; 3
     afe:	d3 c0       	rjmp	.+422    	; 0xca6 <input+0x2e6>
            I__State = I__WaitPlayedNL;
     b00:	89 e1       	ldi	r24, 0x19	; 25
     b02:	80 93 6a 05 	sts	0x056A, r24
     b06:	08 95       	ret
         }
         break;
      case I__WaitShowScore: 
         if ((~PINB & 0x04)) {
     b08:	1a 99       	sbic	0x03, 2	; 3
     b0a:	cd c0       	rjmp	.+410    	; 0xca6 <input+0x2e6>
            I__State = I__WaitShowScoreL;
     b0c:	8e e0       	ldi	r24, 0x0E	; 14
     b0e:	80 93 6a 05 	sts	0x056A, r24
     b12:	08 95       	ret
         }
         break;
      case I__WaitShowScoreL: 
         if (!(~PINB & 0x04)) {
     b14:	1a 9b       	sbis	0x03, 2	; 3
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <input+0x160>
            I__State = I__WaitStart;
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	80 93 6a 05 	sts	0x056A, r24
     b1e:	99 c0       	rjmp	.+306    	; 0xc52 <input+0x292>
         }
         else if ((~PINB & 0x04)) {
     b20:	83 b1       	in	r24, 0x03	; 3
     b22:	08 95       	ret
            I__State = I__WaitShowScoreL;
         }
         break;
      case I__WaitStartL: 
         if (!(~PINB & 0x04)) {
     b24:	1a 9b       	sbis	0x03, 2	; 3
     b26:	04 c0       	rjmp	.+8      	; 0xb30 <input+0x170>
            I__State = I__SelectDiff;
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	80 93 6a 05 	sts	0x056A, r24
     b2e:	a2 c0       	rjmp	.+324    	; 0xc74 <input+0x2b4>
         }
         else if ((~PINB & 0x04)) {
     b30:	83 b1       	in	r24, 0x03	; 3
     b32:	08 95       	ret
            I__State = I__WaitStartL;
         }
         break;
      case I__SelectDiffL: 
         if (!(~PINB & 0x04)) {
     b34:	1a 9b       	sbis	0x03, 2	; 3
     b36:	09 c0       	rjmp	.+18     	; 0xb4a <input+0x18a>
            I__State = I__PlayMusic;
     b38:	85 e0       	ldi	r24, 0x05	; 5
     b3a:	80 93 6a 05 	sts	0x056A, r24
			}   
			break;
		case I__DiffAddL:
			break;
		case I__PlayMusic:
			play_music = 1; music_end = 0;
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	80 93 5a 05 	sts	0x055A, r24
     b44:	10 92 59 05 	sts	0x0559, r1
			break;
     b48:	08 95       	ret
         break;
      case I__SelectDiffL: 
         if (!(~PINB & 0x04)) {
            I__State = I__PlayMusic;
         }
         else if ((~PINB & 0x04)) {
     b4a:	83 b1       	in	r24, 0x03	; 3
     b4c:	08 95       	ret
            I__State = I__SelectDiffL;
         }
         break;
      case I__BInput: 
         if (1) {
            I__State = I__BInputL;
     b4e:	82 e1       	ldi	r24, 0x12	; 18
     b50:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     b54:	62 c0       	rjmp	.+196    	; 0xc1a <input+0x25a>
      case I__BInputL: 
         if (!(~PINB & 0x80)) {
     b56:	1f 9b       	sbis	0x03, 7	; 3
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <input+0x1a2>
            I__State = I__WaitInput;
     b5a:	8a e0       	ldi	r24, 0x0A	; 10
     b5c:	80 93 6a 05 	sts	0x056A, r24
     b60:	4e c0       	rjmp	.+156    	; 0xbfe <input+0x23e>
         }
         else if ((~PINB & 0x80)) {
     b62:	83 b1       	in	r24, 0x03	; 3
     b64:	5a c0       	rjmp	.+180    	; 0xc1a <input+0x25a>
            I__State = I__BInputL;
         }
         break;
      case I__GInput: 
         if (1) {
            I__State = I__GInputL;
     b66:	84 e1       	ldi	r24, 0x14	; 20
     b68:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     b6c:	64 c0       	rjmp	.+200    	; 0xc36 <input+0x276>
      case I__GInputL: 
         if (!(~PINB & 0x20)) {
     b6e:	1d 9b       	sbis	0x03, 5	; 3
     b70:	04 c0       	rjmp	.+8      	; 0xb7a <input+0x1ba>
            I__State = I__WaitInput;
     b72:	8a e0       	ldi	r24, 0x0A	; 10
     b74:	80 93 6a 05 	sts	0x056A, r24
     b78:	42 c0       	rjmp	.+132    	; 0xbfe <input+0x23e>
         }
         else if ((~PINB & 0x20)) {
     b7a:	83 b1       	in	r24, 0x03	; 3
     b7c:	5c c0       	rjmp	.+184    	; 0xc36 <input+0x276>
            I__State = I__GInputL;
         }
         break;
      case I__DisplayInputN: 
         if (1) {
            I__State = I__WaitInputN;
     b7e:	86 e1       	ldi	r24, 0x16	; 22
     b80:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     b84:	08 95       	ret
      case I__WaitInputN: 
         if ((~PINB & 0x04)) {
     b86:	1a 99       	sbic	0x03, 2	; 3
     b88:	8e c0       	rjmp	.+284    	; 0xca6 <input+0x2e6>
            I__State = I__WaitInputNL;
     b8a:	8a e1       	ldi	r24, 0x1A	; 26
     b8c:	80 93 6a 05 	sts	0x056A, r24
     b90:	08 95       	ret
         }
         break;
      case I__WaitInputL: 
         if (!(~PINB & 0x04)) {
     b92:	1a 9b       	sbis	0x03, 2	; 3
     b94:	05 c0       	rjmp	.+10     	; 0xba0 <input+0x1e0>
            I__State = I__DisplayPlayedN;
     b96:	8b e0       	ldi	r24, 0x0B	; 11
     b98:	80 93 6a 05 	sts	0x056A, r24
			light_none();
			frequency(OO);
			break;
		case I__DisplayPlayedN:
			//ShowPlayedNotes
			display_notes_played();
     b9c:	10 ce       	rjmp	.-992    	; 0x7be <display_notes_played>
			break;
     b9e:	08 95       	ret
         break;
      case I__WaitInputL: 
         if (!(~PINB & 0x04)) {
            I__State = I__DisplayPlayedN;
         }
         else if ((~PINB & 0x04)) {
     ba0:	83 b1       	in	r24, 0x03	; 3
     ba2:	08 95       	ret
            I__State = I__WaitInputL;
         }
         break;
      case I__ShowScore: 
         if (1) {
            I__State = I__WaitShowScore;
     ba4:	8d e0       	ldi	r24, 0x0D	; 13
     ba6:	80 93 6a 05 	sts	0x056A, r24
         }
         break;
     baa:	08 95       	ret
      case I__WaitPlayedNL: 
         if (!(~PINB & 0x04)) {
     bac:	1a 9b       	sbis	0x03, 2	; 3
     bae:	05 c0       	rjmp	.+10     	; 0xbba <input+0x1fa>
            I__State = I__DisplayInputN;
     bb0:	85 e1       	ldi	r24, 0x15	; 21
     bb2:	80 93 6a 05 	sts	0x056A, r24
			light_green();
			frequency(F3S);
			break;
		case I__DisplayInputN:
			//ShowInputNotes
			display_notes_input();
     bb6:	09 ce       	rjmp	.-1006   	; 0x7ca <display_notes_input>
			break;
     bb8:	08 95       	ret
         break;
      case I__WaitPlayedNL: 
         if (!(~PINB & 0x04)) {
            I__State = I__DisplayInputN;
         }
         else if ((~PINB & 0x04)) {
     bba:	83 b1       	in	r24, 0x03	; 3
     bbc:	08 95       	ret
            I__State = I__WaitPlayedNL;
         }
         break;
      case I__WaitInputNL: 
         if ((~PINB & 0x04)) {
     bbe:	1a 9b       	sbis	0x03, 2	; 3
     bc0:	72 c0       	rjmp	.+228    	; 0xca6 <input+0x2e6>
            I__State = I__WaitInputNL;
         }
         else if (!(~PINB & 0x04)) {
     bc2:	1a 9b       	sbis	0x03, 2	; 3
     bc4:	70 c0       	rjmp	.+224    	; 0xca6 <input+0x2e6>
            I__State = I__ShowScore;
     bc6:	88 e1       	ldi	r24, 0x18	; 24
     bc8:	80 93 6a 05 	sts	0x056A, r24
			break;
		case I__WaitInputL:
			break;
		case I__ShowScore:
			//show score
			display_score();
     bcc:	04 ce       	rjmp	.-1016   	; 0x7d6 <display_score>
			break;
     bce:	08 95       	ret
         else if (!(~PINB & 0x04)) {
            I__State = I__ShowScore;
         }
         break;
      default:
         I__State = I__Init;
     bd0:	10 92 6a 05 	sts	0x056A, r1
     bd4:	08 95       	ret
			Set_Display("Start - W Button", 99);
			score = 0;
			difficulty = 0;
			notes_played = 0;
			notes_input = 0;
			for (int i = 0; i < 65; i++){play_buffer[i] = 0;}
     bd6:	11 92       	st	Z+, r1
     bd8:	e8 17       	cp	r30, r24
     bda:	f9 07       	cpc	r31, r25
     bdc:	e1 f7       	brne	.-8      	; 0xbd6 <input+0x216>
     bde:	e2 ed       	ldi	r30, 0xD2	; 210
     be0:	f4 e0       	ldi	r31, 0x04	; 4
     be2:	83 e1       	ldi	r24, 0x13	; 19
     be4:	95 e0       	ldi	r25, 0x05	; 5
			for (int i = 0; i < 65; i++){input_buffer[i] = 0;}
     be6:	11 92       	st	Z+, r1
     be8:	e8 17       	cp	r30, r24
     bea:	f9 07       	cpc	r31, r25
     bec:	e1 f7       	brne	.-8      	; 0xbe6 <input+0x226>
     bee:	08 95       	ret
			break;
		case I__DiffAdd:
			Set_Display("Diff. Changed", 99);
			if (difficulty < 2)
			{
				difficulty++;
     bf0:	8f 5f       	subi	r24, 0xFF	; 255
     bf2:	80 93 58 05 	sts	0x0558, r24
     bf6:	08 95       	ret
			}
			else
			{
				difficulty = 0;
     bf8:	10 92 58 05 	sts	0x0558, r1
     bfc:	08 95       	ret
			//RLED on
			light_red();
			frequency(B3);
			break;
		case I__WaitInput:
			Set_Display("Input Melody", 99);
     bfe:	63 e6       	ldi	r22, 0x63	; 99
     c00:	82 e9       	ldi	r24, 0x92	; 146
     c02:	94 e0       	ldi	r25, 0x04	; 4
     c04:	91 dd       	rcall	.-1246   	; 0x728 <Set_Display>
			light_none();
     c06:	c2 db       	rcall	.-2172   	; 0x38c <light_none>
	}
}

void frequency(double f)
{
	frequency_g = f;
     c08:	10 92 5b 05 	sts	0x055B, r1
     c0c:	10 92 5c 05 	sts	0x055C, r1
     c10:	10 92 5d 05 	sts	0x055D, r1
     c14:	10 92 5e 05 	sts	0x055E, r1
     c18:	08 95       	ret
			Set_Display("Blue Selected", 99);
			input_buffer[notes_input] = 'B';
			notes_input++;
			break;
		case I__BInputL:
			light_blue();
     c1a:	aa db       	rcall	.-2220   	; 0x370 <light_blue>
	}
}

void frequency(double f)
{
	frequency_g = f;
     c1c:	8b e7       	ldi	r24, 0x7B	; 123
     c1e:	94 ed       	ldi	r25, 0xD4	; 212
     c20:	a2 e1       	ldi	r26, 0x12	; 18
     c22:	b3 e4       	ldi	r27, 0x43	; 67
     c24:	80 93 5b 05 	sts	0x055B, r24
     c28:	90 93 5c 05 	sts	0x055C, r25
     c2c:	a0 93 5d 05 	sts	0x055D, r26
     c30:	b0 93 5e 05 	sts	0x055E, r27
     c34:	08 95       	ret
			input_buffer[notes_input] = 'G';
			notes_input++;
			break;
		case I__GInputL:
			//GLED on
			light_green();
     c36:	a3 db       	rcall	.-2234   	; 0x37e <light_green>
	}
}

void frequency(double f)
{
	frequency_g = f;
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	a9 e3       	ldi	r26, 0x39	; 57
     c3e:	b3 e4       	ldi	r27, 0x43	; 67
     c40:	80 93 5b 05 	sts	0x055B, r24
     c44:	90 93 5c 05 	sts	0x055C, r25
     c48:	a0 93 5d 05 	sts	0x055D, r26
     c4c:	b0 93 5e 05 	sts	0x055E, r27
     c50:	08 95       	ret

	switch(I__State) { // State actions
		case I__Init:
			break;
		case I__WaitStart:
			Set_Display("Start - W Button", 99);
     c52:	63 e6       	ldi	r22, 0x63	; 99
     c54:	8f e9       	ldi	r24, 0x9F	; 159
     c56:	94 e0       	ldi	r25, 0x04	; 4
     c58:	67 dd       	rcall	.-1330   	; 0x728 <Set_Display>
			score = 0;
     c5a:	10 92 57 05 	sts	0x0557, r1
			difficulty = 0;
     c5e:	10 92 58 05 	sts	0x0558, r1
			notes_played = 0;
     c62:	10 92 55 05 	sts	0x0555, r1
			notes_input = 0;
     c66:	10 92 54 05 	sts	0x0554, r1
     c6a:	e3 e1       	ldi	r30, 0x13	; 19
     c6c:	f5 e0       	ldi	r31, 0x05	; 5
     c6e:	84 e5       	ldi	r24, 0x54	; 84
     c70:	95 e0       	ldi	r25, 0x05	; 5
     c72:	b1 cf       	rjmp	.-158    	; 0xbd6 <input+0x216>
			for (int i = 0; i < 65; i++){play_buffer[i] = 0;}
			for (int i = 0; i < 65; i++){input_buffer[i] = 0;}
			break;
		case I__SelectDiff:
			Set_Display("Difficulty: ", difficulty+1);
     c74:	60 91 58 05 	lds	r22, 0x0558
     c78:	6f 5f       	subi	r22, 0xFF	; 255
     c7a:	80 eb       	ldi	r24, 0xB0	; 176
     c7c:	94 e0       	ldi	r25, 0x04	; 4
     c7e:	54 cd       	rjmp	.-1368   	; 0x728 <Set_Display>
			break;
     c80:	08 95       	ret
			break;
		case I__PlayMusic:
			play_music = 1; music_end = 0;
			break;
		case I__PlayMusicWait:
			Set_Display("Playing Music",99); break;
     c82:	63 e6       	ldi	r22, 0x63	; 99
     c84:	8d eb       	ldi	r24, 0xBD	; 189
     c86:	94 e0       	ldi	r25, 0x04	; 4
     c88:	4f cd       	rjmp	.-1378   	; 0x728 <Set_Display>
     c8a:	08 95       	ret
			input_buffer[notes_input] = 'R';
			notes_input++;
			break;
		case I__RInputL:
			//RLED on
			light_red();
     c8c:	6a db       	rcall	.-2348   	; 0x362 <light_red>
	}
}

void frequency(double f)
{
	frequency_g = f;
     c8e:	84 ea       	ldi	r24, 0xA4	; 164
     c90:	90 ef       	ldi	r25, 0xF0	; 240
     c92:	a6 e7       	ldi	r26, 0x76	; 118
     c94:	b3 e4       	ldi	r27, 0x43	; 67
     c96:	80 93 5b 05 	sts	0x055B, r24
     c9a:	90 93 5c 05 	sts	0x055C, r25
     c9e:	a0 93 5d 05 	sts	0x055D, r26
     ca2:	b0 93 5e 05 	sts	0x055E, r27
     ca6:	08 95       	ret

00000ca8 <main>:
}


int main(void)
{
	DDRA = 0xFF; PORTA = 0x00;
     ca8:	8f ef       	ldi	r24, 0xFF	; 255
     caa:	81 b9       	out	0x01, r24	; 1
     cac:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x43; PORTB = 0xBC;
     cae:	93 e4       	ldi	r25, 0x43	; 67
     cb0:	94 b9       	out	0x04, r25	; 4
     cb2:	9c eb       	ldi	r25, 0xBC	; 188
     cb4:	95 b9       	out	0x05, r25	; 5
	DDRC = 0xFF; PORTC = 0x00;
     cb6:	87 b9       	out	0x07, r24	; 7
     cb8:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
     cba:	8a b9       	out	0x0a, r24	; 10
     cbc:	1b b8       	out	0x0b, r1	; 11
	
	LCD_init();
     cbe:	ab da       	rcall	.-2730   	; 0x216 <LCD_init>
	
	//LInitializing SMs
	Spk_State = Spk_SMLStart;
     cc0:	10 92 68 05 	sts	0x0568, r1
	I__State = I__Init;
     cc4:	10 92 6a 05 	sts	0x056A, r1
	Song_State = SLInit;
     cc8:	10 92 64 05 	sts	0x0564, r1
	LED_state = LInit;
     ccc:	10 92 69 05 	sts	0x0569, r1
	LCD_state =LCDwait;
     cd0:	10 92 67 05 	sts	0x0567, r1
	
	PWM_on();
     cd4:	3b db       	rcall	.-2442   	; 0x34c <PWM_on>
unsigned long _avr_timer_M = 1; // Start count from here, down to 0. Default 1ms
unsigned long _avr_timer_cntcurr = 0; // Current internal count of 1ms ticks

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
     cd6:	8a e0       	ldi	r24, 0x0A	; 10
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	a0 e0       	ldi	r26, 0x00	; 0
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	80 93 4c 04 	sts	0x044C, r24
     ce2:	90 93 4d 04 	sts	0x044D, r25
     ce6:	a0 93 4e 04 	sts	0x044E, r26
     cea:	b0 93 4f 04 	sts	0x044F, r27
	_avr_timer_cntcurr = _avr_timer_M;
     cee:	80 93 5f 05 	sts	0x055F, r24
     cf2:	90 93 60 05 	sts	0x0560, r25
     cf6:	a0 93 61 05 	sts	0x0561, r26
     cfa:	b0 93 62 05 	sts	0x0562, r27
	unsigned char display_counter = 0;
	unsigned char input_counter = 0;
	
	
	TimerSet(10);
	TimerOn();
     cfe:	00 da       	rcall	.-3072   	; 0x100 <TimerOn>
	
	PWM_on();
	
	//Timer Counters
	unsigned char song_counter = 0;
	unsigned char display_counter = 0;
     d00:	d0 e0       	ldi	r29, 0x00	; 0
	LCD_state =LCDwait;
	
	PWM_on();
	
	//Timer Counters
	unsigned char song_counter = 0;
     d02:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char display_counter = 0;
	unsigned char input_counter = 0;
     d04:	c0 e0       	ldi	r28, 0x00	; 0
		//Music SM
		if(play_music)
		{
			if (song_counter == 20) {
				Song();
				song_counter = 0;
     d06:	00 e0       	ldi	r16, 0x00	; 0
     d08:	02 c0       	rjmp	.+4      	; 0xd0e <main+0x66>
    while(1)
    {
		//Input SM
		if(input_counter == 15)
		{
			input();
     d0a:	5a de       	rcall	.-844    	; 0x9c0 <input>
			input_counter = 0;
     d0c:	c0 2f       	mov	r28, r16
		}
		input_counter++;
     d0e:	cf 5f       	subi	r28, 0xFF	; 255
		
		//Music SM
		if(play_music)
     d10:	80 91 5a 05 	lds	r24, 0x055A
     d14:	88 23       	and	r24, r24
     d16:	29 f0       	breq	.+10     	; 0xd22 <main+0x7a>
		{
			if (song_counter == 20) {
     d18:	14 31       	cpi	r17, 0x14	; 20
     d1a:	19 f4       	brne	.+6      	; 0xd22 <main+0x7a>
				Song();
     d1c:	94 dd       	rcall	.-1240   	; 0x846 <Song>
				song_counter = 0;
				LED();
     d1e:	08 de       	rcall	.-1008   	; 0x930 <LED>
		//Music SM
		if(play_music)
		{
			if (song_counter == 20) {
				Song();
				song_counter = 0;
     d20:	10 2f       	mov	r17, r16
				LED();
			}
		}
		song_counter++;
     d22:	1f 5f       	subi	r17, 0xFF	; 255
		
		//Enable PWM to play music on speaker
		Enable_PWM();
     d24:	78 dd       	rcall	.-1296   	; 0x816 <Enable_PWM>
		
		//LCD SM
		if (display_counter == 25)
     d26:	d9 31       	cpi	r29, 0x19	; 25
     d28:	11 f4       	brne	.+4      	; 0xd2e <main+0x86>
		{
			LCD();
     d2a:	2b de       	rcall	.-938    	; 0x982 <LCD>
			display_counter = 0;
     d2c:	d0 2f       	mov	r29, r16
		}
		display_counter++;
     d2e:	df 5f       	subi	r29, 0xFF	; 255
		
		while(!TimerFlag){}
     d30:	80 91 63 05 	lds	r24, 0x0563
     d34:	88 23       	and	r24, r24
     d36:	e1 f3       	breq	.-8      	; 0xd30 <main+0x88>
		TimerFlag = 0;
     d38:	00 93 63 05 	sts	0x0563, r16
	TimerOn();
	
    while(1)
    {
		//Input SM
		if(input_counter == 15)
     d3c:	cf 30       	cpi	r28, 0x0F	; 15
     d3e:	39 f7       	brne	.-50     	; 0xd0e <main+0x66>
     d40:	e4 cf       	rjmp	.-56     	; 0xd0a <main+0x62>

00000d42 <__cmpsf2>:
     d42:	9c d0       	rcall	.+312    	; 0xe7c <__fp_cmp>
     d44:	08 f4       	brcc	.+2      	; 0xd48 <__cmpsf2+0x6>
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	08 95       	ret

00000d4a <__divsf3>:
     d4a:	0c d0       	rcall	.+24     	; 0xd64 <__divsf3x>
     d4c:	d2 c0       	rjmp	.+420    	; 0xef2 <__fp_round>
     d4e:	ca d0       	rcall	.+404    	; 0xee4 <__fp_pscB>
     d50:	40 f0       	brcs	.+16     	; 0xd62 <__divsf3+0x18>
     d52:	c1 d0       	rcall	.+386    	; 0xed6 <__fp_pscA>
     d54:	30 f0       	brcs	.+12     	; 0xd62 <__divsf3+0x18>
     d56:	21 f4       	brne	.+8      	; 0xd60 <__divsf3+0x16>
     d58:	5f 3f       	cpi	r21, 0xFF	; 255
     d5a:	19 f0       	breq	.+6      	; 0xd62 <__divsf3+0x18>
     d5c:	b3 c0       	rjmp	.+358    	; 0xec4 <__fp_inf>
     d5e:	51 11       	cpse	r21, r1
     d60:	fc c0       	rjmp	.+504    	; 0xf5a <__fp_szero>
     d62:	b6 c0       	rjmp	.+364    	; 0xed0 <__fp_nan>

00000d64 <__divsf3x>:
     d64:	d7 d0       	rcall	.+430    	; 0xf14 <__fp_split3>
     d66:	98 f3       	brcs	.-26     	; 0xd4e <__divsf3+0x4>

00000d68 <__divsf3_pse>:
     d68:	99 23       	and	r25, r25
     d6a:	c9 f3       	breq	.-14     	; 0xd5e <__divsf3+0x14>
     d6c:	55 23       	and	r21, r21
     d6e:	b1 f3       	breq	.-20     	; 0xd5c <__divsf3+0x12>
     d70:	95 1b       	sub	r25, r21
     d72:	55 0b       	sbc	r21, r21
     d74:	bb 27       	eor	r27, r27
     d76:	aa 27       	eor	r26, r26
     d78:	62 17       	cp	r22, r18
     d7a:	73 07       	cpc	r23, r19
     d7c:	84 07       	cpc	r24, r20
     d7e:	38 f0       	brcs	.+14     	; 0xd8e <__divsf3_pse+0x26>
     d80:	9f 5f       	subi	r25, 0xFF	; 255
     d82:	5f 4f       	sbci	r21, 0xFF	; 255
     d84:	22 0f       	add	r18, r18
     d86:	33 1f       	adc	r19, r19
     d88:	44 1f       	adc	r20, r20
     d8a:	aa 1f       	adc	r26, r26
     d8c:	a9 f3       	breq	.-22     	; 0xd78 <__divsf3_pse+0x10>
     d8e:	33 d0       	rcall	.+102    	; 0xdf6 <__divsf3_pse+0x8e>
     d90:	0e 2e       	mov	r0, r30
     d92:	3a f0       	brmi	.+14     	; 0xda2 <__divsf3_pse+0x3a>
     d94:	e0 e8       	ldi	r30, 0x80	; 128
     d96:	30 d0       	rcall	.+96     	; 0xdf8 <__divsf3_pse+0x90>
     d98:	91 50       	subi	r25, 0x01	; 1
     d9a:	50 40       	sbci	r21, 0x00	; 0
     d9c:	e6 95       	lsr	r30
     d9e:	00 1c       	adc	r0, r0
     da0:	ca f7       	brpl	.-14     	; 0xd94 <__divsf3_pse+0x2c>
     da2:	29 d0       	rcall	.+82     	; 0xdf6 <__divsf3_pse+0x8e>
     da4:	fe 2f       	mov	r31, r30
     da6:	27 d0       	rcall	.+78     	; 0xdf6 <__divsf3_pse+0x8e>
     da8:	66 0f       	add	r22, r22
     daa:	77 1f       	adc	r23, r23
     dac:	88 1f       	adc	r24, r24
     dae:	bb 1f       	adc	r27, r27
     db0:	26 17       	cp	r18, r22
     db2:	37 07       	cpc	r19, r23
     db4:	48 07       	cpc	r20, r24
     db6:	ab 07       	cpc	r26, r27
     db8:	b0 e8       	ldi	r27, 0x80	; 128
     dba:	09 f0       	breq	.+2      	; 0xdbe <__divsf3_pse+0x56>
     dbc:	bb 0b       	sbc	r27, r27
     dbe:	80 2d       	mov	r24, r0
     dc0:	bf 01       	movw	r22, r30
     dc2:	ff 27       	eor	r31, r31
     dc4:	93 58       	subi	r25, 0x83	; 131
     dc6:	5f 4f       	sbci	r21, 0xFF	; 255
     dc8:	2a f0       	brmi	.+10     	; 0xdd4 <__divsf3_pse+0x6c>
     dca:	9e 3f       	cpi	r25, 0xFE	; 254
     dcc:	51 05       	cpc	r21, r1
     dce:	68 f0       	brcs	.+26     	; 0xdea <__divsf3_pse+0x82>
     dd0:	79 c0       	rjmp	.+242    	; 0xec4 <__fp_inf>
     dd2:	c3 c0       	rjmp	.+390    	; 0xf5a <__fp_szero>
     dd4:	5f 3f       	cpi	r21, 0xFF	; 255
     dd6:	ec f3       	brlt	.-6      	; 0xdd2 <__divsf3_pse+0x6a>
     dd8:	98 3e       	cpi	r25, 0xE8	; 232
     dda:	dc f3       	brlt	.-10     	; 0xdd2 <__divsf3_pse+0x6a>
     ddc:	86 95       	lsr	r24
     dde:	77 95       	ror	r23
     de0:	67 95       	ror	r22
     de2:	b7 95       	ror	r27
     de4:	f7 95       	ror	r31
     de6:	9f 5f       	subi	r25, 0xFF	; 255
     de8:	c9 f7       	brne	.-14     	; 0xddc <__divsf3_pse+0x74>
     dea:	88 0f       	add	r24, r24
     dec:	91 1d       	adc	r25, r1
     dee:	96 95       	lsr	r25
     df0:	87 95       	ror	r24
     df2:	97 f9       	bld	r25, 7
     df4:	08 95       	ret
     df6:	e1 e0       	ldi	r30, 0x01	; 1
     df8:	66 0f       	add	r22, r22
     dfa:	77 1f       	adc	r23, r23
     dfc:	88 1f       	adc	r24, r24
     dfe:	bb 1f       	adc	r27, r27
     e00:	62 17       	cp	r22, r18
     e02:	73 07       	cpc	r23, r19
     e04:	84 07       	cpc	r24, r20
     e06:	ba 07       	cpc	r27, r26
     e08:	20 f0       	brcs	.+8      	; 0xe12 <__divsf3_pse+0xaa>
     e0a:	62 1b       	sub	r22, r18
     e0c:	73 0b       	sbc	r23, r19
     e0e:	84 0b       	sbc	r24, r20
     e10:	ba 0b       	sbc	r27, r26
     e12:	ee 1f       	adc	r30, r30
     e14:	88 f7       	brcc	.-30     	; 0xdf8 <__divsf3_pse+0x90>
     e16:	e0 95       	com	r30
     e18:	08 95       	ret

00000e1a <__fixsfsi>:
     e1a:	04 d0       	rcall	.+8      	; 0xe24 <__fixunssfsi>
     e1c:	68 94       	set
     e1e:	b1 11       	cpse	r27, r1
     e20:	9c c0       	rjmp	.+312    	; 0xf5a <__fp_szero>
     e22:	08 95       	ret

00000e24 <__fixunssfsi>:
     e24:	7f d0       	rcall	.+254    	; 0xf24 <__fp_splitA>
     e26:	88 f0       	brcs	.+34     	; 0xe4a <__fixunssfsi+0x26>
     e28:	9f 57       	subi	r25, 0x7F	; 127
     e2a:	90 f0       	brcs	.+36     	; 0xe50 <__fixunssfsi+0x2c>
     e2c:	b9 2f       	mov	r27, r25
     e2e:	99 27       	eor	r25, r25
     e30:	b7 51       	subi	r27, 0x17	; 23
     e32:	a0 f0       	brcs	.+40     	; 0xe5c <__fixunssfsi+0x38>
     e34:	d1 f0       	breq	.+52     	; 0xe6a <__fixunssfsi+0x46>
     e36:	66 0f       	add	r22, r22
     e38:	77 1f       	adc	r23, r23
     e3a:	88 1f       	adc	r24, r24
     e3c:	99 1f       	adc	r25, r25
     e3e:	1a f0       	brmi	.+6      	; 0xe46 <__fixunssfsi+0x22>
     e40:	ba 95       	dec	r27
     e42:	c9 f7       	brne	.-14     	; 0xe36 <__fixunssfsi+0x12>
     e44:	12 c0       	rjmp	.+36     	; 0xe6a <__fixunssfsi+0x46>
     e46:	b1 30       	cpi	r27, 0x01	; 1
     e48:	81 f0       	breq	.+32     	; 0xe6a <__fixunssfsi+0x46>
     e4a:	86 d0       	rcall	.+268    	; 0xf58 <__fp_zero>
     e4c:	b1 e0       	ldi	r27, 0x01	; 1
     e4e:	08 95       	ret
     e50:	83 c0       	rjmp	.+262    	; 0xf58 <__fp_zero>
     e52:	67 2f       	mov	r22, r23
     e54:	78 2f       	mov	r23, r24
     e56:	88 27       	eor	r24, r24
     e58:	b8 5f       	subi	r27, 0xF8	; 248
     e5a:	39 f0       	breq	.+14     	; 0xe6a <__fixunssfsi+0x46>
     e5c:	b9 3f       	cpi	r27, 0xF9	; 249
     e5e:	cc f3       	brlt	.-14     	; 0xe52 <__fixunssfsi+0x2e>
     e60:	86 95       	lsr	r24
     e62:	77 95       	ror	r23
     e64:	67 95       	ror	r22
     e66:	b3 95       	inc	r27
     e68:	d9 f7       	brne	.-10     	; 0xe60 <__fixunssfsi+0x3c>
     e6a:	3e f4       	brtc	.+14     	; 0xe7a <__fixunssfsi+0x56>
     e6c:	90 95       	com	r25
     e6e:	80 95       	com	r24
     e70:	70 95       	com	r23
     e72:	61 95       	neg	r22
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	8f 4f       	sbci	r24, 0xFF	; 255
     e78:	9f 4f       	sbci	r25, 0xFF	; 255
     e7a:	08 95       	ret

00000e7c <__fp_cmp>:
     e7c:	99 0f       	add	r25, r25
     e7e:	00 08       	sbc	r0, r0
     e80:	55 0f       	add	r21, r21
     e82:	aa 0b       	sbc	r26, r26
     e84:	e0 e8       	ldi	r30, 0x80	; 128
     e86:	fe ef       	ldi	r31, 0xFE	; 254
     e88:	16 16       	cp	r1, r22
     e8a:	17 06       	cpc	r1, r23
     e8c:	e8 07       	cpc	r30, r24
     e8e:	f9 07       	cpc	r31, r25
     e90:	c0 f0       	brcs	.+48     	; 0xec2 <__fp_cmp+0x46>
     e92:	12 16       	cp	r1, r18
     e94:	13 06       	cpc	r1, r19
     e96:	e4 07       	cpc	r30, r20
     e98:	f5 07       	cpc	r31, r21
     e9a:	98 f0       	brcs	.+38     	; 0xec2 <__fp_cmp+0x46>
     e9c:	62 1b       	sub	r22, r18
     e9e:	73 0b       	sbc	r23, r19
     ea0:	84 0b       	sbc	r24, r20
     ea2:	95 0b       	sbc	r25, r21
     ea4:	39 f4       	brne	.+14     	; 0xeb4 <__fp_cmp+0x38>
     ea6:	0a 26       	eor	r0, r26
     ea8:	61 f0       	breq	.+24     	; 0xec2 <__fp_cmp+0x46>
     eaa:	23 2b       	or	r18, r19
     eac:	24 2b       	or	r18, r20
     eae:	25 2b       	or	r18, r21
     eb0:	21 f4       	brne	.+8      	; 0xeba <__fp_cmp+0x3e>
     eb2:	08 95       	ret
     eb4:	0a 26       	eor	r0, r26
     eb6:	09 f4       	brne	.+2      	; 0xeba <__fp_cmp+0x3e>
     eb8:	a1 40       	sbci	r26, 0x01	; 1
     eba:	a6 95       	lsr	r26
     ebc:	8f ef       	ldi	r24, 0xFF	; 255
     ebe:	81 1d       	adc	r24, r1
     ec0:	81 1d       	adc	r24, r1
     ec2:	08 95       	ret

00000ec4 <__fp_inf>:
     ec4:	97 f9       	bld	r25, 7
     ec6:	9f 67       	ori	r25, 0x7F	; 127
     ec8:	80 e8       	ldi	r24, 0x80	; 128
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	08 95       	ret

00000ed0 <__fp_nan>:
     ed0:	9f ef       	ldi	r25, 0xFF	; 255
     ed2:	80 ec       	ldi	r24, 0xC0	; 192
     ed4:	08 95       	ret

00000ed6 <__fp_pscA>:
     ed6:	00 24       	eor	r0, r0
     ed8:	0a 94       	dec	r0
     eda:	16 16       	cp	r1, r22
     edc:	17 06       	cpc	r1, r23
     ede:	18 06       	cpc	r1, r24
     ee0:	09 06       	cpc	r0, r25
     ee2:	08 95       	ret

00000ee4 <__fp_pscB>:
     ee4:	00 24       	eor	r0, r0
     ee6:	0a 94       	dec	r0
     ee8:	12 16       	cp	r1, r18
     eea:	13 06       	cpc	r1, r19
     eec:	14 06       	cpc	r1, r20
     eee:	05 06       	cpc	r0, r21
     ef0:	08 95       	ret

00000ef2 <__fp_round>:
     ef2:	09 2e       	mov	r0, r25
     ef4:	03 94       	inc	r0
     ef6:	00 0c       	add	r0, r0
     ef8:	11 f4       	brne	.+4      	; 0xefe <__fp_round+0xc>
     efa:	88 23       	and	r24, r24
     efc:	52 f0       	brmi	.+20     	; 0xf12 <__fp_round+0x20>
     efe:	bb 0f       	add	r27, r27
     f00:	40 f4       	brcc	.+16     	; 0xf12 <__fp_round+0x20>
     f02:	bf 2b       	or	r27, r31
     f04:	11 f4       	brne	.+4      	; 0xf0a <__fp_round+0x18>
     f06:	60 ff       	sbrs	r22, 0
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <__fp_round+0x20>
     f0a:	6f 5f       	subi	r22, 0xFF	; 255
     f0c:	7f 4f       	sbci	r23, 0xFF	; 255
     f0e:	8f 4f       	sbci	r24, 0xFF	; 255
     f10:	9f 4f       	sbci	r25, 0xFF	; 255
     f12:	08 95       	ret

00000f14 <__fp_split3>:
     f14:	57 fd       	sbrc	r21, 7
     f16:	90 58       	subi	r25, 0x80	; 128
     f18:	44 0f       	add	r20, r20
     f1a:	55 1f       	adc	r21, r21
     f1c:	59 f0       	breq	.+22     	; 0xf34 <__fp_splitA+0x10>
     f1e:	5f 3f       	cpi	r21, 0xFF	; 255
     f20:	71 f0       	breq	.+28     	; 0xf3e <__fp_splitA+0x1a>
     f22:	47 95       	ror	r20

00000f24 <__fp_splitA>:
     f24:	88 0f       	add	r24, r24
     f26:	97 fb       	bst	r25, 7
     f28:	99 1f       	adc	r25, r25
     f2a:	61 f0       	breq	.+24     	; 0xf44 <__fp_splitA+0x20>
     f2c:	9f 3f       	cpi	r25, 0xFF	; 255
     f2e:	79 f0       	breq	.+30     	; 0xf4e <__fp_splitA+0x2a>
     f30:	87 95       	ror	r24
     f32:	08 95       	ret
     f34:	12 16       	cp	r1, r18
     f36:	13 06       	cpc	r1, r19
     f38:	14 06       	cpc	r1, r20
     f3a:	55 1f       	adc	r21, r21
     f3c:	f2 cf       	rjmp	.-28     	; 0xf22 <__fp_split3+0xe>
     f3e:	46 95       	lsr	r20
     f40:	f1 df       	rcall	.-30     	; 0xf24 <__fp_splitA>
     f42:	08 c0       	rjmp	.+16     	; 0xf54 <__fp_splitA+0x30>
     f44:	16 16       	cp	r1, r22
     f46:	17 06       	cpc	r1, r23
     f48:	18 06       	cpc	r1, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	f1 cf       	rjmp	.-30     	; 0xf30 <__fp_splitA+0xc>
     f4e:	86 95       	lsr	r24
     f50:	71 05       	cpc	r23, r1
     f52:	61 05       	cpc	r22, r1
     f54:	08 94       	sec
     f56:	08 95       	ret

00000f58 <__fp_zero>:
     f58:	e8 94       	clt

00000f5a <__fp_szero>:
     f5a:	bb 27       	eor	r27, r27
     f5c:	66 27       	eor	r22, r22
     f5e:	77 27       	eor	r23, r23
     f60:	cb 01       	movw	r24, r22
     f62:	97 f9       	bld	r25, 7
     f64:	08 95       	ret

00000f66 <__gesf2>:
     f66:	8a df       	rcall	.-236    	; 0xe7c <__fp_cmp>
     f68:	08 f4       	brcc	.+2      	; 0xf6c <__gesf2+0x6>
     f6a:	8f ef       	ldi	r24, 0xFF	; 255
     f6c:	08 95       	ret

00000f6e <__mulsf3>:
     f6e:	0b d0       	rcall	.+22     	; 0xf86 <__mulsf3x>
     f70:	c0 cf       	rjmp	.-128    	; 0xef2 <__fp_round>
     f72:	b1 df       	rcall	.-158    	; 0xed6 <__fp_pscA>
     f74:	28 f0       	brcs	.+10     	; 0xf80 <__mulsf3+0x12>
     f76:	b6 df       	rcall	.-148    	; 0xee4 <__fp_pscB>
     f78:	18 f0       	brcs	.+6      	; 0xf80 <__mulsf3+0x12>
     f7a:	95 23       	and	r25, r21
     f7c:	09 f0       	breq	.+2      	; 0xf80 <__mulsf3+0x12>
     f7e:	a2 cf       	rjmp	.-188    	; 0xec4 <__fp_inf>
     f80:	a7 cf       	rjmp	.-178    	; 0xed0 <__fp_nan>
     f82:	11 24       	eor	r1, r1
     f84:	ea cf       	rjmp	.-44     	; 0xf5a <__fp_szero>

00000f86 <__mulsf3x>:
     f86:	c6 df       	rcall	.-116    	; 0xf14 <__fp_split3>
     f88:	a0 f3       	brcs	.-24     	; 0xf72 <__mulsf3+0x4>

00000f8a <__mulsf3_pse>:
     f8a:	95 9f       	mul	r25, r21
     f8c:	d1 f3       	breq	.-12     	; 0xf82 <__mulsf3+0x14>
     f8e:	95 0f       	add	r25, r21
     f90:	50 e0       	ldi	r21, 0x00	; 0
     f92:	55 1f       	adc	r21, r21
     f94:	62 9f       	mul	r22, r18
     f96:	f0 01       	movw	r30, r0
     f98:	72 9f       	mul	r23, r18
     f9a:	bb 27       	eor	r27, r27
     f9c:	f0 0d       	add	r31, r0
     f9e:	b1 1d       	adc	r27, r1
     fa0:	63 9f       	mul	r22, r19
     fa2:	aa 27       	eor	r26, r26
     fa4:	f0 0d       	add	r31, r0
     fa6:	b1 1d       	adc	r27, r1
     fa8:	aa 1f       	adc	r26, r26
     faa:	64 9f       	mul	r22, r20
     fac:	66 27       	eor	r22, r22
     fae:	b0 0d       	add	r27, r0
     fb0:	a1 1d       	adc	r26, r1
     fb2:	66 1f       	adc	r22, r22
     fb4:	82 9f       	mul	r24, r18
     fb6:	22 27       	eor	r18, r18
     fb8:	b0 0d       	add	r27, r0
     fba:	a1 1d       	adc	r26, r1
     fbc:	62 1f       	adc	r22, r18
     fbe:	73 9f       	mul	r23, r19
     fc0:	b0 0d       	add	r27, r0
     fc2:	a1 1d       	adc	r26, r1
     fc4:	62 1f       	adc	r22, r18
     fc6:	83 9f       	mul	r24, r19
     fc8:	a0 0d       	add	r26, r0
     fca:	61 1d       	adc	r22, r1
     fcc:	22 1f       	adc	r18, r18
     fce:	74 9f       	mul	r23, r20
     fd0:	33 27       	eor	r19, r19
     fd2:	a0 0d       	add	r26, r0
     fd4:	61 1d       	adc	r22, r1
     fd6:	23 1f       	adc	r18, r19
     fd8:	84 9f       	mul	r24, r20
     fda:	60 0d       	add	r22, r0
     fdc:	21 1d       	adc	r18, r1
     fde:	82 2f       	mov	r24, r18
     fe0:	76 2f       	mov	r23, r22
     fe2:	6a 2f       	mov	r22, r26
     fe4:	11 24       	eor	r1, r1
     fe6:	9f 57       	subi	r25, 0x7F	; 127
     fe8:	50 40       	sbci	r21, 0x00	; 0
     fea:	8a f0       	brmi	.+34     	; 0x100e <__mulsf3_pse+0x84>
     fec:	e1 f0       	breq	.+56     	; 0x1026 <__mulsf3_pse+0x9c>
     fee:	88 23       	and	r24, r24
     ff0:	4a f0       	brmi	.+18     	; 0x1004 <__mulsf3_pse+0x7a>
     ff2:	ee 0f       	add	r30, r30
     ff4:	ff 1f       	adc	r31, r31
     ff6:	bb 1f       	adc	r27, r27
     ff8:	66 1f       	adc	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	88 1f       	adc	r24, r24
     ffe:	91 50       	subi	r25, 0x01	; 1
    1000:	50 40       	sbci	r21, 0x00	; 0
    1002:	a9 f7       	brne	.-22     	; 0xfee <__mulsf3_pse+0x64>
    1004:	9e 3f       	cpi	r25, 0xFE	; 254
    1006:	51 05       	cpc	r21, r1
    1008:	70 f0       	brcs	.+28     	; 0x1026 <__mulsf3_pse+0x9c>
    100a:	5c cf       	rjmp	.-328    	; 0xec4 <__fp_inf>
    100c:	a6 cf       	rjmp	.-180    	; 0xf5a <__fp_szero>
    100e:	5f 3f       	cpi	r21, 0xFF	; 255
    1010:	ec f3       	brlt	.-6      	; 0x100c <__mulsf3_pse+0x82>
    1012:	98 3e       	cpi	r25, 0xE8	; 232
    1014:	dc f3       	brlt	.-10     	; 0x100c <__mulsf3_pse+0x82>
    1016:	86 95       	lsr	r24
    1018:	77 95       	ror	r23
    101a:	67 95       	ror	r22
    101c:	b7 95       	ror	r27
    101e:	f7 95       	ror	r31
    1020:	e7 95       	ror	r30
    1022:	9f 5f       	subi	r25, 0xFF	; 255
    1024:	c1 f7       	brne	.-16     	; 0x1016 <__mulsf3_pse+0x8c>
    1026:	fe 2b       	or	r31, r30
    1028:	88 0f       	add	r24, r24
    102a:	91 1d       	adc	r25, r1
    102c:	96 95       	lsr	r25
    102e:	87 95       	ror	r24
    1030:	97 f9       	bld	r25, 7
    1032:	08 95       	ret

00001034 <__tablejump2__>:
    1034:	ee 0f       	add	r30, r30
    1036:	ff 1f       	adc	r31, r31

00001038 <__tablejump__>:
    1038:	05 90       	lpm	r0, Z+
    103a:	f4 91       	lpm	r31, Z
    103c:	e0 2d       	mov	r30, r0
    103e:	09 94       	ijmp

00001040 <strcat>:
    1040:	fb 01       	movw	r30, r22
    1042:	dc 01       	movw	r26, r24
    1044:	0d 90       	ld	r0, X+
    1046:	00 20       	and	r0, r0
    1048:	e9 f7       	brne	.-6      	; 0x1044 <strcat+0x4>
    104a:	11 97       	sbiw	r26, 0x01	; 1
    104c:	01 90       	ld	r0, Z+
    104e:	0d 92       	st	X+, r0
    1050:	00 20       	and	r0, r0
    1052:	e1 f7       	brne	.-8      	; 0x104c <strcat+0xc>
    1054:	08 95       	ret

00001056 <strcpy>:
    1056:	fb 01       	movw	r30, r22
    1058:	dc 01       	movw	r26, r24
    105a:	01 90       	ld	r0, Z+
    105c:	0d 92       	st	X+, r0
    105e:	00 20       	and	r0, r0
    1060:	e1 f7       	brne	.-8      	; 0x105a <strcpy+0x4>
    1062:	08 95       	ret

00001064 <snprintf>:
    1064:	0f 93       	push	r16
    1066:	1f 93       	push	r17
    1068:	cf 93       	push	r28
    106a:	df 93       	push	r29
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	2e 97       	sbiw	r28, 0x0e	; 14
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	0d 89       	ldd	r16, Y+21	; 0x15
    107e:	1e 89       	ldd	r17, Y+22	; 0x16
    1080:	8f 89       	ldd	r24, Y+23	; 0x17
    1082:	98 8d       	ldd	r25, Y+24	; 0x18
    1084:	26 e0       	ldi	r18, 0x06	; 6
    1086:	2c 83       	std	Y+4, r18	; 0x04
    1088:	1a 83       	std	Y+2, r17	; 0x02
    108a:	09 83       	std	Y+1, r16	; 0x01
    108c:	97 ff       	sbrs	r25, 7
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <snprintf+0x30>
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	90 e8       	ldi	r25, 0x80	; 128
    1094:	01 97       	sbiw	r24, 0x01	; 1
    1096:	9e 83       	std	Y+6, r25	; 0x06
    1098:	8d 83       	std	Y+5, r24	; 0x05
    109a:	ae 01       	movw	r20, r28
    109c:	45 5e       	subi	r20, 0xE5	; 229
    109e:	5f 4f       	sbci	r21, 0xFF	; 255
    10a0:	69 8d       	ldd	r22, Y+25	; 0x19
    10a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10a4:	ce 01       	movw	r24, r28
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	19 d0       	rcall	.+50     	; 0x10dc <vfprintf>
    10aa:	4d 81       	ldd	r20, Y+5	; 0x05
    10ac:	5e 81       	ldd	r21, Y+6	; 0x06
    10ae:	57 fd       	sbrc	r21, 7
    10b0:	0a c0       	rjmp	.+20     	; 0x10c6 <snprintf+0x62>
    10b2:	2f 81       	ldd	r18, Y+7	; 0x07
    10b4:	38 85       	ldd	r19, Y+8	; 0x08
    10b6:	42 17       	cp	r20, r18
    10b8:	53 07       	cpc	r21, r19
    10ba:	0c f4       	brge	.+2      	; 0x10be <snprintf+0x5a>
    10bc:	9a 01       	movw	r18, r20
    10be:	f8 01       	movw	r30, r16
    10c0:	e2 0f       	add	r30, r18
    10c2:	f3 1f       	adc	r31, r19
    10c4:	10 82       	st	Z, r1
    10c6:	2e 96       	adiw	r28, 0x0e	; 14
    10c8:	0f b6       	in	r0, 0x3f	; 63
    10ca:	f8 94       	cli
    10cc:	de bf       	out	0x3e, r29	; 62
    10ce:	0f be       	out	0x3f, r0	; 63
    10d0:	cd bf       	out	0x3d, r28	; 61
    10d2:	df 91       	pop	r29
    10d4:	cf 91       	pop	r28
    10d6:	1f 91       	pop	r17
    10d8:	0f 91       	pop	r16
    10da:	08 95       	ret

000010dc <vfprintf>:
    10dc:	2f 92       	push	r2
    10de:	3f 92       	push	r3
    10e0:	4f 92       	push	r4
    10e2:	5f 92       	push	r5
    10e4:	6f 92       	push	r6
    10e6:	7f 92       	push	r7
    10e8:	8f 92       	push	r8
    10ea:	9f 92       	push	r9
    10ec:	af 92       	push	r10
    10ee:	bf 92       	push	r11
    10f0:	cf 92       	push	r12
    10f2:	df 92       	push	r13
    10f4:	ef 92       	push	r14
    10f6:	ff 92       	push	r15
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	cd b7       	in	r28, 0x3d	; 61
    1102:	de b7       	in	r29, 0x3e	; 62
    1104:	2c 97       	sbiw	r28, 0x0c	; 12
    1106:	0f b6       	in	r0, 0x3f	; 63
    1108:	f8 94       	cli
    110a:	de bf       	out	0x3e, r29	; 62
    110c:	0f be       	out	0x3f, r0	; 63
    110e:	cd bf       	out	0x3d, r28	; 61
    1110:	7c 01       	movw	r14, r24
    1112:	6b 01       	movw	r12, r22
    1114:	8a 01       	movw	r16, r20
    1116:	fc 01       	movw	r30, r24
    1118:	17 82       	std	Z+7, r1	; 0x07
    111a:	16 82       	std	Z+6, r1	; 0x06
    111c:	83 81       	ldd	r24, Z+3	; 0x03
    111e:	81 ff       	sbrs	r24, 1
    1120:	b0 c1       	rjmp	.+864    	; 0x1482 <vfprintf+0x3a6>
    1122:	ce 01       	movw	r24, r28
    1124:	01 96       	adiw	r24, 0x01	; 1
    1126:	4c 01       	movw	r8, r24
    1128:	f7 01       	movw	r30, r14
    112a:	93 81       	ldd	r25, Z+3	; 0x03
    112c:	f6 01       	movw	r30, r12
    112e:	93 fd       	sbrc	r25, 3
    1130:	85 91       	lpm	r24, Z+
    1132:	93 ff       	sbrs	r25, 3
    1134:	81 91       	ld	r24, Z+
    1136:	6f 01       	movw	r12, r30
    1138:	88 23       	and	r24, r24
    113a:	09 f4       	brne	.+2      	; 0x113e <vfprintf+0x62>
    113c:	9e c1       	rjmp	.+828    	; 0x147a <vfprintf+0x39e>
    113e:	85 32       	cpi	r24, 0x25	; 37
    1140:	39 f4       	brne	.+14     	; 0x1150 <vfprintf+0x74>
    1142:	93 fd       	sbrc	r25, 3
    1144:	85 91       	lpm	r24, Z+
    1146:	93 ff       	sbrs	r25, 3
    1148:	81 91       	ld	r24, Z+
    114a:	6f 01       	movw	r12, r30
    114c:	85 32       	cpi	r24, 0x25	; 37
    114e:	21 f4       	brne	.+8      	; 0x1158 <vfprintf+0x7c>
    1150:	b7 01       	movw	r22, r14
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	c7 d1       	rcall	.+910    	; 0x14e4 <fputc>
    1156:	e8 cf       	rjmp	.-48     	; 0x1128 <vfprintf+0x4c>
    1158:	51 2c       	mov	r5, r1
    115a:	31 2c       	mov	r3, r1
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	20 32       	cpi	r18, 0x20	; 32
    1160:	a0 f4       	brcc	.+40     	; 0x118a <vfprintf+0xae>
    1162:	8b 32       	cpi	r24, 0x2B	; 43
    1164:	69 f0       	breq	.+26     	; 0x1180 <vfprintf+0xa4>
    1166:	30 f4       	brcc	.+12     	; 0x1174 <vfprintf+0x98>
    1168:	80 32       	cpi	r24, 0x20	; 32
    116a:	59 f0       	breq	.+22     	; 0x1182 <vfprintf+0xa6>
    116c:	83 32       	cpi	r24, 0x23	; 35
    116e:	69 f4       	brne	.+26     	; 0x118a <vfprintf+0xae>
    1170:	20 61       	ori	r18, 0x10	; 16
    1172:	2c c0       	rjmp	.+88     	; 0x11cc <vfprintf+0xf0>
    1174:	8d 32       	cpi	r24, 0x2D	; 45
    1176:	39 f0       	breq	.+14     	; 0x1186 <vfprintf+0xaa>
    1178:	80 33       	cpi	r24, 0x30	; 48
    117a:	39 f4       	brne	.+14     	; 0x118a <vfprintf+0xae>
    117c:	21 60       	ori	r18, 0x01	; 1
    117e:	26 c0       	rjmp	.+76     	; 0x11cc <vfprintf+0xf0>
    1180:	22 60       	ori	r18, 0x02	; 2
    1182:	24 60       	ori	r18, 0x04	; 4
    1184:	23 c0       	rjmp	.+70     	; 0x11cc <vfprintf+0xf0>
    1186:	28 60       	ori	r18, 0x08	; 8
    1188:	21 c0       	rjmp	.+66     	; 0x11cc <vfprintf+0xf0>
    118a:	27 fd       	sbrc	r18, 7
    118c:	27 c0       	rjmp	.+78     	; 0x11dc <vfprintf+0x100>
    118e:	30 ed       	ldi	r19, 0xD0	; 208
    1190:	38 0f       	add	r19, r24
    1192:	3a 30       	cpi	r19, 0x0A	; 10
    1194:	78 f4       	brcc	.+30     	; 0x11b4 <vfprintf+0xd8>
    1196:	26 ff       	sbrs	r18, 6
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <vfprintf+0xca>
    119a:	fa e0       	ldi	r31, 0x0A	; 10
    119c:	5f 9e       	mul	r5, r31
    119e:	30 0d       	add	r19, r0
    11a0:	11 24       	eor	r1, r1
    11a2:	53 2e       	mov	r5, r19
    11a4:	13 c0       	rjmp	.+38     	; 0x11cc <vfprintf+0xf0>
    11a6:	8a e0       	ldi	r24, 0x0A	; 10
    11a8:	38 9e       	mul	r3, r24
    11aa:	30 0d       	add	r19, r0
    11ac:	11 24       	eor	r1, r1
    11ae:	33 2e       	mov	r3, r19
    11b0:	20 62       	ori	r18, 0x20	; 32
    11b2:	0c c0       	rjmp	.+24     	; 0x11cc <vfprintf+0xf0>
    11b4:	8e 32       	cpi	r24, 0x2E	; 46
    11b6:	21 f4       	brne	.+8      	; 0x11c0 <vfprintf+0xe4>
    11b8:	26 fd       	sbrc	r18, 6
    11ba:	5f c1       	rjmp	.+702    	; 0x147a <vfprintf+0x39e>
    11bc:	20 64       	ori	r18, 0x40	; 64
    11be:	06 c0       	rjmp	.+12     	; 0x11cc <vfprintf+0xf0>
    11c0:	8c 36       	cpi	r24, 0x6C	; 108
    11c2:	11 f4       	brne	.+4      	; 0x11c8 <vfprintf+0xec>
    11c4:	20 68       	ori	r18, 0x80	; 128
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <vfprintf+0xf0>
    11c8:	88 36       	cpi	r24, 0x68	; 104
    11ca:	41 f4       	brne	.+16     	; 0x11dc <vfprintf+0x100>
    11cc:	f6 01       	movw	r30, r12
    11ce:	93 fd       	sbrc	r25, 3
    11d0:	85 91       	lpm	r24, Z+
    11d2:	93 ff       	sbrs	r25, 3
    11d4:	81 91       	ld	r24, Z+
    11d6:	6f 01       	movw	r12, r30
    11d8:	81 11       	cpse	r24, r1
    11da:	c1 cf       	rjmp	.-126    	; 0x115e <vfprintf+0x82>
    11dc:	98 2f       	mov	r25, r24
    11de:	9f 7d       	andi	r25, 0xDF	; 223
    11e0:	95 54       	subi	r25, 0x45	; 69
    11e2:	93 30       	cpi	r25, 0x03	; 3
    11e4:	28 f4       	brcc	.+10     	; 0x11f0 <vfprintf+0x114>
    11e6:	0c 5f       	subi	r16, 0xFC	; 252
    11e8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ea:	ff e3       	ldi	r31, 0x3F	; 63
    11ec:	f9 83       	std	Y+1, r31	; 0x01
    11ee:	0d c0       	rjmp	.+26     	; 0x120a <vfprintf+0x12e>
    11f0:	83 36       	cpi	r24, 0x63	; 99
    11f2:	31 f0       	breq	.+12     	; 0x1200 <vfprintf+0x124>
    11f4:	83 37       	cpi	r24, 0x73	; 115
    11f6:	71 f0       	breq	.+28     	; 0x1214 <vfprintf+0x138>
    11f8:	83 35       	cpi	r24, 0x53	; 83
    11fa:	09 f0       	breq	.+2      	; 0x11fe <vfprintf+0x122>
    11fc:	57 c0       	rjmp	.+174    	; 0x12ac <vfprintf+0x1d0>
    11fe:	21 c0       	rjmp	.+66     	; 0x1242 <vfprintf+0x166>
    1200:	f8 01       	movw	r30, r16
    1202:	80 81       	ld	r24, Z
    1204:	89 83       	std	Y+1, r24	; 0x01
    1206:	0e 5f       	subi	r16, 0xFE	; 254
    1208:	1f 4f       	sbci	r17, 0xFF	; 255
    120a:	44 24       	eor	r4, r4
    120c:	43 94       	inc	r4
    120e:	51 2c       	mov	r5, r1
    1210:	54 01       	movw	r10, r8
    1212:	14 c0       	rjmp	.+40     	; 0x123c <vfprintf+0x160>
    1214:	38 01       	movw	r6, r16
    1216:	f2 e0       	ldi	r31, 0x02	; 2
    1218:	6f 0e       	add	r6, r31
    121a:	71 1c       	adc	r7, r1
    121c:	f8 01       	movw	r30, r16
    121e:	a0 80       	ld	r10, Z
    1220:	b1 80       	ldd	r11, Z+1	; 0x01
    1222:	26 ff       	sbrs	r18, 6
    1224:	03 c0       	rjmp	.+6      	; 0x122c <vfprintf+0x150>
    1226:	65 2d       	mov	r22, r5
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <vfprintf+0x154>
    122c:	6f ef       	ldi	r22, 0xFF	; 255
    122e:	7f ef       	ldi	r23, 0xFF	; 255
    1230:	c5 01       	movw	r24, r10
    1232:	2c 87       	std	Y+12, r18	; 0x0c
    1234:	4c d1       	rcall	.+664    	; 0x14ce <strnlen>
    1236:	2c 01       	movw	r4, r24
    1238:	83 01       	movw	r16, r6
    123a:	2c 85       	ldd	r18, Y+12	; 0x0c
    123c:	2f 77       	andi	r18, 0x7F	; 127
    123e:	22 2e       	mov	r2, r18
    1240:	16 c0       	rjmp	.+44     	; 0x126e <vfprintf+0x192>
    1242:	38 01       	movw	r6, r16
    1244:	f2 e0       	ldi	r31, 0x02	; 2
    1246:	6f 0e       	add	r6, r31
    1248:	71 1c       	adc	r7, r1
    124a:	f8 01       	movw	r30, r16
    124c:	a0 80       	ld	r10, Z
    124e:	b1 80       	ldd	r11, Z+1	; 0x01
    1250:	26 ff       	sbrs	r18, 6
    1252:	03 c0       	rjmp	.+6      	; 0x125a <vfprintf+0x17e>
    1254:	65 2d       	mov	r22, r5
    1256:	70 e0       	ldi	r23, 0x00	; 0
    1258:	02 c0       	rjmp	.+4      	; 0x125e <vfprintf+0x182>
    125a:	6f ef       	ldi	r22, 0xFF	; 255
    125c:	7f ef       	ldi	r23, 0xFF	; 255
    125e:	c5 01       	movw	r24, r10
    1260:	2c 87       	std	Y+12, r18	; 0x0c
    1262:	2a d1       	rcall	.+596    	; 0x14b8 <strnlen_P>
    1264:	2c 01       	movw	r4, r24
    1266:	2c 85       	ldd	r18, Y+12	; 0x0c
    1268:	20 68       	ori	r18, 0x80	; 128
    126a:	22 2e       	mov	r2, r18
    126c:	83 01       	movw	r16, r6
    126e:	23 fc       	sbrc	r2, 3
    1270:	19 c0       	rjmp	.+50     	; 0x12a4 <vfprintf+0x1c8>
    1272:	83 2d       	mov	r24, r3
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	48 16       	cp	r4, r24
    1278:	59 06       	cpc	r5, r25
    127a:	a0 f4       	brcc	.+40     	; 0x12a4 <vfprintf+0x1c8>
    127c:	b7 01       	movw	r22, r14
    127e:	80 e2       	ldi	r24, 0x20	; 32
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	30 d1       	rcall	.+608    	; 0x14e4 <fputc>
    1284:	3a 94       	dec	r3
    1286:	f5 cf       	rjmp	.-22     	; 0x1272 <vfprintf+0x196>
    1288:	f5 01       	movw	r30, r10
    128a:	27 fc       	sbrc	r2, 7
    128c:	85 91       	lpm	r24, Z+
    128e:	27 fe       	sbrs	r2, 7
    1290:	81 91       	ld	r24, Z+
    1292:	5f 01       	movw	r10, r30
    1294:	b7 01       	movw	r22, r14
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	25 d1       	rcall	.+586    	; 0x14e4 <fputc>
    129a:	31 10       	cpse	r3, r1
    129c:	3a 94       	dec	r3
    129e:	f1 e0       	ldi	r31, 0x01	; 1
    12a0:	4f 1a       	sub	r4, r31
    12a2:	51 08       	sbc	r5, r1
    12a4:	41 14       	cp	r4, r1
    12a6:	51 04       	cpc	r5, r1
    12a8:	79 f7       	brne	.-34     	; 0x1288 <vfprintf+0x1ac>
    12aa:	de c0       	rjmp	.+444    	; 0x1468 <vfprintf+0x38c>
    12ac:	84 36       	cpi	r24, 0x64	; 100
    12ae:	11 f0       	breq	.+4      	; 0x12b4 <vfprintf+0x1d8>
    12b0:	89 36       	cpi	r24, 0x69	; 105
    12b2:	31 f5       	brne	.+76     	; 0x1300 <vfprintf+0x224>
    12b4:	f8 01       	movw	r30, r16
    12b6:	27 ff       	sbrs	r18, 7
    12b8:	07 c0       	rjmp	.+14     	; 0x12c8 <vfprintf+0x1ec>
    12ba:	60 81       	ld	r22, Z
    12bc:	71 81       	ldd	r23, Z+1	; 0x01
    12be:	82 81       	ldd	r24, Z+2	; 0x02
    12c0:	93 81       	ldd	r25, Z+3	; 0x03
    12c2:	0c 5f       	subi	r16, 0xFC	; 252
    12c4:	1f 4f       	sbci	r17, 0xFF	; 255
    12c6:	08 c0       	rjmp	.+16     	; 0x12d8 <vfprintf+0x1fc>
    12c8:	60 81       	ld	r22, Z
    12ca:	71 81       	ldd	r23, Z+1	; 0x01
    12cc:	88 27       	eor	r24, r24
    12ce:	77 fd       	sbrc	r23, 7
    12d0:	80 95       	com	r24
    12d2:	98 2f       	mov	r25, r24
    12d4:	0e 5f       	subi	r16, 0xFE	; 254
    12d6:	1f 4f       	sbci	r17, 0xFF	; 255
    12d8:	2f 76       	andi	r18, 0x6F	; 111
    12da:	b2 2e       	mov	r11, r18
    12dc:	97 ff       	sbrs	r25, 7
    12de:	09 c0       	rjmp	.+18     	; 0x12f2 <vfprintf+0x216>
    12e0:	90 95       	com	r25
    12e2:	80 95       	com	r24
    12e4:	70 95       	com	r23
    12e6:	61 95       	neg	r22
    12e8:	7f 4f       	sbci	r23, 0xFF	; 255
    12ea:	8f 4f       	sbci	r24, 0xFF	; 255
    12ec:	9f 4f       	sbci	r25, 0xFF	; 255
    12ee:	20 68       	ori	r18, 0x80	; 128
    12f0:	b2 2e       	mov	r11, r18
    12f2:	2a e0       	ldi	r18, 0x0A	; 10
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	a4 01       	movw	r20, r8
    12f8:	27 d1       	rcall	.+590    	; 0x1548 <__ultoa_invert>
    12fa:	a8 2e       	mov	r10, r24
    12fc:	a8 18       	sub	r10, r8
    12fe:	43 c0       	rjmp	.+134    	; 0x1386 <vfprintf+0x2aa>
    1300:	85 37       	cpi	r24, 0x75	; 117
    1302:	29 f4       	brne	.+10     	; 0x130e <vfprintf+0x232>
    1304:	2f 7e       	andi	r18, 0xEF	; 239
    1306:	b2 2e       	mov	r11, r18
    1308:	2a e0       	ldi	r18, 0x0A	; 10
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	25 c0       	rjmp	.+74     	; 0x1358 <vfprintf+0x27c>
    130e:	f2 2f       	mov	r31, r18
    1310:	f9 7f       	andi	r31, 0xF9	; 249
    1312:	bf 2e       	mov	r11, r31
    1314:	8f 36       	cpi	r24, 0x6F	; 111
    1316:	c1 f0       	breq	.+48     	; 0x1348 <vfprintf+0x26c>
    1318:	18 f4       	brcc	.+6      	; 0x1320 <vfprintf+0x244>
    131a:	88 35       	cpi	r24, 0x58	; 88
    131c:	79 f0       	breq	.+30     	; 0x133c <vfprintf+0x260>
    131e:	ad c0       	rjmp	.+346    	; 0x147a <vfprintf+0x39e>
    1320:	80 37       	cpi	r24, 0x70	; 112
    1322:	19 f0       	breq	.+6      	; 0x132a <vfprintf+0x24e>
    1324:	88 37       	cpi	r24, 0x78	; 120
    1326:	21 f0       	breq	.+8      	; 0x1330 <vfprintf+0x254>
    1328:	a8 c0       	rjmp	.+336    	; 0x147a <vfprintf+0x39e>
    132a:	2f 2f       	mov	r18, r31
    132c:	20 61       	ori	r18, 0x10	; 16
    132e:	b2 2e       	mov	r11, r18
    1330:	b4 fe       	sbrs	r11, 4
    1332:	0d c0       	rjmp	.+26     	; 0x134e <vfprintf+0x272>
    1334:	8b 2d       	mov	r24, r11
    1336:	84 60       	ori	r24, 0x04	; 4
    1338:	b8 2e       	mov	r11, r24
    133a:	09 c0       	rjmp	.+18     	; 0x134e <vfprintf+0x272>
    133c:	24 ff       	sbrs	r18, 4
    133e:	0a c0       	rjmp	.+20     	; 0x1354 <vfprintf+0x278>
    1340:	9f 2f       	mov	r25, r31
    1342:	96 60       	ori	r25, 0x06	; 6
    1344:	b9 2e       	mov	r11, r25
    1346:	06 c0       	rjmp	.+12     	; 0x1354 <vfprintf+0x278>
    1348:	28 e0       	ldi	r18, 0x08	; 8
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	05 c0       	rjmp	.+10     	; 0x1358 <vfprintf+0x27c>
    134e:	20 e1       	ldi	r18, 0x10	; 16
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	02 c0       	rjmp	.+4      	; 0x1358 <vfprintf+0x27c>
    1354:	20 e1       	ldi	r18, 0x10	; 16
    1356:	32 e0       	ldi	r19, 0x02	; 2
    1358:	f8 01       	movw	r30, r16
    135a:	b7 fe       	sbrs	r11, 7
    135c:	07 c0       	rjmp	.+14     	; 0x136c <vfprintf+0x290>
    135e:	60 81       	ld	r22, Z
    1360:	71 81       	ldd	r23, Z+1	; 0x01
    1362:	82 81       	ldd	r24, Z+2	; 0x02
    1364:	93 81       	ldd	r25, Z+3	; 0x03
    1366:	0c 5f       	subi	r16, 0xFC	; 252
    1368:	1f 4f       	sbci	r17, 0xFF	; 255
    136a:	06 c0       	rjmp	.+12     	; 0x1378 <vfprintf+0x29c>
    136c:	60 81       	ld	r22, Z
    136e:	71 81       	ldd	r23, Z+1	; 0x01
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	0e 5f       	subi	r16, 0xFE	; 254
    1376:	1f 4f       	sbci	r17, 0xFF	; 255
    1378:	a4 01       	movw	r20, r8
    137a:	e6 d0       	rcall	.+460    	; 0x1548 <__ultoa_invert>
    137c:	a8 2e       	mov	r10, r24
    137e:	a8 18       	sub	r10, r8
    1380:	fb 2d       	mov	r31, r11
    1382:	ff 77       	andi	r31, 0x7F	; 127
    1384:	bf 2e       	mov	r11, r31
    1386:	b6 fe       	sbrs	r11, 6
    1388:	0b c0       	rjmp	.+22     	; 0x13a0 <vfprintf+0x2c4>
    138a:	2b 2d       	mov	r18, r11
    138c:	2e 7f       	andi	r18, 0xFE	; 254
    138e:	a5 14       	cp	r10, r5
    1390:	50 f4       	brcc	.+20     	; 0x13a6 <vfprintf+0x2ca>
    1392:	b4 fe       	sbrs	r11, 4
    1394:	0a c0       	rjmp	.+20     	; 0x13aa <vfprintf+0x2ce>
    1396:	b2 fc       	sbrc	r11, 2
    1398:	08 c0       	rjmp	.+16     	; 0x13aa <vfprintf+0x2ce>
    139a:	2b 2d       	mov	r18, r11
    139c:	2e 7e       	andi	r18, 0xEE	; 238
    139e:	05 c0       	rjmp	.+10     	; 0x13aa <vfprintf+0x2ce>
    13a0:	7a 2c       	mov	r7, r10
    13a2:	2b 2d       	mov	r18, r11
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <vfprintf+0x2d0>
    13a6:	7a 2c       	mov	r7, r10
    13a8:	01 c0       	rjmp	.+2      	; 0x13ac <vfprintf+0x2d0>
    13aa:	75 2c       	mov	r7, r5
    13ac:	24 ff       	sbrs	r18, 4
    13ae:	0d c0       	rjmp	.+26     	; 0x13ca <vfprintf+0x2ee>
    13b0:	fe 01       	movw	r30, r28
    13b2:	ea 0d       	add	r30, r10
    13b4:	f1 1d       	adc	r31, r1
    13b6:	80 81       	ld	r24, Z
    13b8:	80 33       	cpi	r24, 0x30	; 48
    13ba:	11 f4       	brne	.+4      	; 0x13c0 <vfprintf+0x2e4>
    13bc:	29 7e       	andi	r18, 0xE9	; 233
    13be:	09 c0       	rjmp	.+18     	; 0x13d2 <vfprintf+0x2f6>
    13c0:	22 ff       	sbrs	r18, 2
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <vfprintf+0x2f4>
    13c4:	73 94       	inc	r7
    13c6:	73 94       	inc	r7
    13c8:	04 c0       	rjmp	.+8      	; 0x13d2 <vfprintf+0x2f6>
    13ca:	82 2f       	mov	r24, r18
    13cc:	86 78       	andi	r24, 0x86	; 134
    13ce:	09 f0       	breq	.+2      	; 0x13d2 <vfprintf+0x2f6>
    13d0:	73 94       	inc	r7
    13d2:	23 fd       	sbrc	r18, 3
    13d4:	12 c0       	rjmp	.+36     	; 0x13fa <vfprintf+0x31e>
    13d6:	20 ff       	sbrs	r18, 0
    13d8:	06 c0       	rjmp	.+12     	; 0x13e6 <vfprintf+0x30a>
    13da:	5a 2c       	mov	r5, r10
    13dc:	73 14       	cp	r7, r3
    13de:	18 f4       	brcc	.+6      	; 0x13e6 <vfprintf+0x30a>
    13e0:	53 0c       	add	r5, r3
    13e2:	57 18       	sub	r5, r7
    13e4:	73 2c       	mov	r7, r3
    13e6:	73 14       	cp	r7, r3
    13e8:	60 f4       	brcc	.+24     	; 0x1402 <vfprintf+0x326>
    13ea:	b7 01       	movw	r22, r14
    13ec:	80 e2       	ldi	r24, 0x20	; 32
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	2c 87       	std	Y+12, r18	; 0x0c
    13f2:	78 d0       	rcall	.+240    	; 0x14e4 <fputc>
    13f4:	73 94       	inc	r7
    13f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    13f8:	f6 cf       	rjmp	.-20     	; 0x13e6 <vfprintf+0x30a>
    13fa:	73 14       	cp	r7, r3
    13fc:	10 f4       	brcc	.+4      	; 0x1402 <vfprintf+0x326>
    13fe:	37 18       	sub	r3, r7
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <vfprintf+0x328>
    1402:	31 2c       	mov	r3, r1
    1404:	24 ff       	sbrs	r18, 4
    1406:	11 c0       	rjmp	.+34     	; 0x142a <vfprintf+0x34e>
    1408:	b7 01       	movw	r22, r14
    140a:	80 e3       	ldi	r24, 0x30	; 48
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	2c 87       	std	Y+12, r18	; 0x0c
    1410:	69 d0       	rcall	.+210    	; 0x14e4 <fputc>
    1412:	2c 85       	ldd	r18, Y+12	; 0x0c
    1414:	22 ff       	sbrs	r18, 2
    1416:	16 c0       	rjmp	.+44     	; 0x1444 <vfprintf+0x368>
    1418:	21 ff       	sbrs	r18, 1
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <vfprintf+0x346>
    141c:	88 e5       	ldi	r24, 0x58	; 88
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <vfprintf+0x34a>
    1422:	88 e7       	ldi	r24, 0x78	; 120
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	b7 01       	movw	r22, r14
    1428:	0c c0       	rjmp	.+24     	; 0x1442 <vfprintf+0x366>
    142a:	82 2f       	mov	r24, r18
    142c:	86 78       	andi	r24, 0x86	; 134
    142e:	51 f0       	breq	.+20     	; 0x1444 <vfprintf+0x368>
    1430:	21 fd       	sbrc	r18, 1
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <vfprintf+0x35c>
    1434:	80 e2       	ldi	r24, 0x20	; 32
    1436:	01 c0       	rjmp	.+2      	; 0x143a <vfprintf+0x35e>
    1438:	8b e2       	ldi	r24, 0x2B	; 43
    143a:	27 fd       	sbrc	r18, 7
    143c:	8d e2       	ldi	r24, 0x2D	; 45
    143e:	b7 01       	movw	r22, r14
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	50 d0       	rcall	.+160    	; 0x14e4 <fputc>
    1444:	a5 14       	cp	r10, r5
    1446:	30 f4       	brcc	.+12     	; 0x1454 <vfprintf+0x378>
    1448:	b7 01       	movw	r22, r14
    144a:	80 e3       	ldi	r24, 0x30	; 48
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	4a d0       	rcall	.+148    	; 0x14e4 <fputc>
    1450:	5a 94       	dec	r5
    1452:	f8 cf       	rjmp	.-16     	; 0x1444 <vfprintf+0x368>
    1454:	aa 94       	dec	r10
    1456:	f4 01       	movw	r30, r8
    1458:	ea 0d       	add	r30, r10
    145a:	f1 1d       	adc	r31, r1
    145c:	80 81       	ld	r24, Z
    145e:	b7 01       	movw	r22, r14
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	40 d0       	rcall	.+128    	; 0x14e4 <fputc>
    1464:	a1 10       	cpse	r10, r1
    1466:	f6 cf       	rjmp	.-20     	; 0x1454 <vfprintf+0x378>
    1468:	33 20       	and	r3, r3
    146a:	09 f4       	brne	.+2      	; 0x146e <vfprintf+0x392>
    146c:	5d ce       	rjmp	.-838    	; 0x1128 <vfprintf+0x4c>
    146e:	b7 01       	movw	r22, r14
    1470:	80 e2       	ldi	r24, 0x20	; 32
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	37 d0       	rcall	.+110    	; 0x14e4 <fputc>
    1476:	3a 94       	dec	r3
    1478:	f7 cf       	rjmp	.-18     	; 0x1468 <vfprintf+0x38c>
    147a:	f7 01       	movw	r30, r14
    147c:	86 81       	ldd	r24, Z+6	; 0x06
    147e:	97 81       	ldd	r25, Z+7	; 0x07
    1480:	02 c0       	rjmp	.+4      	; 0x1486 <vfprintf+0x3aa>
    1482:	8f ef       	ldi	r24, 0xFF	; 255
    1484:	9f ef       	ldi	r25, 0xFF	; 255
    1486:	2c 96       	adiw	r28, 0x0c	; 12
    1488:	0f b6       	in	r0, 0x3f	; 63
    148a:	f8 94       	cli
    148c:	de bf       	out	0x3e, r29	; 62
    148e:	0f be       	out	0x3f, r0	; 63
    1490:	cd bf       	out	0x3d, r28	; 61
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	1f 91       	pop	r17
    1498:	0f 91       	pop	r16
    149a:	ff 90       	pop	r15
    149c:	ef 90       	pop	r14
    149e:	df 90       	pop	r13
    14a0:	cf 90       	pop	r12
    14a2:	bf 90       	pop	r11
    14a4:	af 90       	pop	r10
    14a6:	9f 90       	pop	r9
    14a8:	8f 90       	pop	r8
    14aa:	7f 90       	pop	r7
    14ac:	6f 90       	pop	r6
    14ae:	5f 90       	pop	r5
    14b0:	4f 90       	pop	r4
    14b2:	3f 90       	pop	r3
    14b4:	2f 90       	pop	r2
    14b6:	08 95       	ret

000014b8 <strnlen_P>:
    14b8:	fc 01       	movw	r30, r24
    14ba:	05 90       	lpm	r0, Z+
    14bc:	61 50       	subi	r22, 0x01	; 1
    14be:	70 40       	sbci	r23, 0x00	; 0
    14c0:	01 10       	cpse	r0, r1
    14c2:	d8 f7       	brcc	.-10     	; 0x14ba <strnlen_P+0x2>
    14c4:	80 95       	com	r24
    14c6:	90 95       	com	r25
    14c8:	8e 0f       	add	r24, r30
    14ca:	9f 1f       	adc	r25, r31
    14cc:	08 95       	ret

000014ce <strnlen>:
    14ce:	fc 01       	movw	r30, r24
    14d0:	61 50       	subi	r22, 0x01	; 1
    14d2:	70 40       	sbci	r23, 0x00	; 0
    14d4:	01 90       	ld	r0, Z+
    14d6:	01 10       	cpse	r0, r1
    14d8:	d8 f7       	brcc	.-10     	; 0x14d0 <strnlen+0x2>
    14da:	80 95       	com	r24
    14dc:	90 95       	com	r25
    14de:	8e 0f       	add	r24, r30
    14e0:	9f 1f       	adc	r25, r31
    14e2:	08 95       	ret

000014e4 <fputc>:
    14e4:	0f 93       	push	r16
    14e6:	1f 93       	push	r17
    14e8:	cf 93       	push	r28
    14ea:	df 93       	push	r29
    14ec:	18 2f       	mov	r17, r24
    14ee:	09 2f       	mov	r16, r25
    14f0:	eb 01       	movw	r28, r22
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	81 fd       	sbrc	r24, 1
    14f6:	03 c0       	rjmp	.+6      	; 0x14fe <fputc+0x1a>
    14f8:	8f ef       	ldi	r24, 0xFF	; 255
    14fa:	9f ef       	ldi	r25, 0xFF	; 255
    14fc:	20 c0       	rjmp	.+64     	; 0x153e <fputc+0x5a>
    14fe:	82 ff       	sbrs	r24, 2
    1500:	10 c0       	rjmp	.+32     	; 0x1522 <fputc+0x3e>
    1502:	4e 81       	ldd	r20, Y+6	; 0x06
    1504:	5f 81       	ldd	r21, Y+7	; 0x07
    1506:	2c 81       	ldd	r18, Y+4	; 0x04
    1508:	3d 81       	ldd	r19, Y+5	; 0x05
    150a:	42 17       	cp	r20, r18
    150c:	53 07       	cpc	r21, r19
    150e:	7c f4       	brge	.+30     	; 0x152e <fputc+0x4a>
    1510:	e8 81       	ld	r30, Y
    1512:	f9 81       	ldd	r31, Y+1	; 0x01
    1514:	9f 01       	movw	r18, r30
    1516:	2f 5f       	subi	r18, 0xFF	; 255
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	39 83       	std	Y+1, r19	; 0x01
    151c:	28 83       	st	Y, r18
    151e:	10 83       	st	Z, r17
    1520:	06 c0       	rjmp	.+12     	; 0x152e <fputc+0x4a>
    1522:	e8 85       	ldd	r30, Y+8	; 0x08
    1524:	f9 85       	ldd	r31, Y+9	; 0x09
    1526:	81 2f       	mov	r24, r17
    1528:	09 95       	icall
    152a:	89 2b       	or	r24, r25
    152c:	29 f7       	brne	.-54     	; 0x14f8 <fputc+0x14>
    152e:	2e 81       	ldd	r18, Y+6	; 0x06
    1530:	3f 81       	ldd	r19, Y+7	; 0x07
    1532:	2f 5f       	subi	r18, 0xFF	; 255
    1534:	3f 4f       	sbci	r19, 0xFF	; 255
    1536:	3f 83       	std	Y+7, r19	; 0x07
    1538:	2e 83       	std	Y+6, r18	; 0x06
    153a:	81 2f       	mov	r24, r17
    153c:	90 2f       	mov	r25, r16
    153e:	df 91       	pop	r29
    1540:	cf 91       	pop	r28
    1542:	1f 91       	pop	r17
    1544:	0f 91       	pop	r16
    1546:	08 95       	ret

00001548 <__ultoa_invert>:
    1548:	fa 01       	movw	r30, r20
    154a:	aa 27       	eor	r26, r26
    154c:	28 30       	cpi	r18, 0x08	; 8
    154e:	51 f1       	breq	.+84     	; 0x15a4 <__ultoa_invert+0x5c>
    1550:	20 31       	cpi	r18, 0x10	; 16
    1552:	81 f1       	breq	.+96     	; 0x15b4 <__ultoa_invert+0x6c>
    1554:	e8 94       	clt
    1556:	6f 93       	push	r22
    1558:	6e 7f       	andi	r22, 0xFE	; 254
    155a:	6e 5f       	subi	r22, 0xFE	; 254
    155c:	7f 4f       	sbci	r23, 0xFF	; 255
    155e:	8f 4f       	sbci	r24, 0xFF	; 255
    1560:	9f 4f       	sbci	r25, 0xFF	; 255
    1562:	af 4f       	sbci	r26, 0xFF	; 255
    1564:	b1 e0       	ldi	r27, 0x01	; 1
    1566:	3e d0       	rcall	.+124    	; 0x15e4 <__ultoa_invert+0x9c>
    1568:	b4 e0       	ldi	r27, 0x04	; 4
    156a:	3c d0       	rcall	.+120    	; 0x15e4 <__ultoa_invert+0x9c>
    156c:	67 0f       	add	r22, r23
    156e:	78 1f       	adc	r23, r24
    1570:	89 1f       	adc	r24, r25
    1572:	9a 1f       	adc	r25, r26
    1574:	a1 1d       	adc	r26, r1
    1576:	68 0f       	add	r22, r24
    1578:	79 1f       	adc	r23, r25
    157a:	8a 1f       	adc	r24, r26
    157c:	91 1d       	adc	r25, r1
    157e:	a1 1d       	adc	r26, r1
    1580:	6a 0f       	add	r22, r26
    1582:	71 1d       	adc	r23, r1
    1584:	81 1d       	adc	r24, r1
    1586:	91 1d       	adc	r25, r1
    1588:	a1 1d       	adc	r26, r1
    158a:	20 d0       	rcall	.+64     	; 0x15cc <__ultoa_invert+0x84>
    158c:	09 f4       	brne	.+2      	; 0x1590 <__ultoa_invert+0x48>
    158e:	68 94       	set
    1590:	3f 91       	pop	r19
    1592:	2a e0       	ldi	r18, 0x0A	; 10
    1594:	26 9f       	mul	r18, r22
    1596:	11 24       	eor	r1, r1
    1598:	30 19       	sub	r19, r0
    159a:	30 5d       	subi	r19, 0xD0	; 208
    159c:	31 93       	st	Z+, r19
    159e:	de f6       	brtc	.-74     	; 0x1556 <__ultoa_invert+0xe>
    15a0:	cf 01       	movw	r24, r30
    15a2:	08 95       	ret
    15a4:	46 2f       	mov	r20, r22
    15a6:	47 70       	andi	r20, 0x07	; 7
    15a8:	40 5d       	subi	r20, 0xD0	; 208
    15aa:	41 93       	st	Z+, r20
    15ac:	b3 e0       	ldi	r27, 0x03	; 3
    15ae:	0f d0       	rcall	.+30     	; 0x15ce <__ultoa_invert+0x86>
    15b0:	c9 f7       	brne	.-14     	; 0x15a4 <__ultoa_invert+0x5c>
    15b2:	f6 cf       	rjmp	.-20     	; 0x15a0 <__ultoa_invert+0x58>
    15b4:	46 2f       	mov	r20, r22
    15b6:	4f 70       	andi	r20, 0x0F	; 15
    15b8:	40 5d       	subi	r20, 0xD0	; 208
    15ba:	4a 33       	cpi	r20, 0x3A	; 58
    15bc:	18 f0       	brcs	.+6      	; 0x15c4 <__ultoa_invert+0x7c>
    15be:	49 5d       	subi	r20, 0xD9	; 217
    15c0:	31 fd       	sbrc	r19, 1
    15c2:	40 52       	subi	r20, 0x20	; 32
    15c4:	41 93       	st	Z+, r20
    15c6:	02 d0       	rcall	.+4      	; 0x15cc <__ultoa_invert+0x84>
    15c8:	a9 f7       	brne	.-22     	; 0x15b4 <__ultoa_invert+0x6c>
    15ca:	ea cf       	rjmp	.-44     	; 0x15a0 <__ultoa_invert+0x58>
    15cc:	b4 e0       	ldi	r27, 0x04	; 4
    15ce:	a6 95       	lsr	r26
    15d0:	97 95       	ror	r25
    15d2:	87 95       	ror	r24
    15d4:	77 95       	ror	r23
    15d6:	67 95       	ror	r22
    15d8:	ba 95       	dec	r27
    15da:	c9 f7       	brne	.-14     	; 0x15ce <__ultoa_invert+0x86>
    15dc:	00 97       	sbiw	r24, 0x00	; 0
    15de:	61 05       	cpc	r22, r1
    15e0:	71 05       	cpc	r23, r1
    15e2:	08 95       	ret
    15e4:	9b 01       	movw	r18, r22
    15e6:	ac 01       	movw	r20, r24
    15e8:	0a 2e       	mov	r0, r26
    15ea:	06 94       	lsr	r0
    15ec:	57 95       	ror	r21
    15ee:	47 95       	ror	r20
    15f0:	37 95       	ror	r19
    15f2:	27 95       	ror	r18
    15f4:	ba 95       	dec	r27
    15f6:	c9 f7       	brne	.-14     	; 0x15ea <__ultoa_invert+0xa2>
    15f8:	62 0f       	add	r22, r18
    15fa:	73 1f       	adc	r23, r19
    15fc:	84 1f       	adc	r24, r20
    15fe:	95 1f       	adc	r25, r21
    1600:	a0 1d       	adc	r26, r0
    1602:	08 95       	ret

00001604 <_exit>:
    1604:	f8 94       	cli

00001606 <__stop_program>:
    1606:	ff cf       	rjmp	.-2      	; 0x1606 <__stop_program>
